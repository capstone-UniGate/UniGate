DO
DO
DO
2024-12-18 23:01:08,542 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2024-12-18 23:01:08,542 INFO sqlalchemy.engine.Engine [raw sql] {}
2024-12-18 23:01:08,543 INFO sqlalchemy.engine.Engine select current_schema()
2024-12-18 23:01:08,543 INFO sqlalchemy.engine.Engine [raw sql] {}
2024-12-18 23:01:08,544 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2024-12-18 23:01:08,544 INFO sqlalchemy.engine.Engine [raw sql] {}
2024-12-18 23:01:08,545 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,546 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:01:08,546 INFO sqlalchemy.engine.Engine [generated in 0.00011s] {'number': 4891185, 'email': 's4891185@studenti.unige.it', 'name': 'Fabio', 'surname': 'Fontana', 'id': UUID('a8e729a4-fd10-433a-8ffa-a43cd3fa3471')}
2024-12-18 23:01:08,547 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,548 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,548 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,548 INFO sqlalchemy.engine.Engine [generated in 0.00009s] {'pk_1': UUID('a8e729a4-fd10-433a-8ffa-a43cd3fa3471')}
2024-12-18 23:01:08,550 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:08,550 INFO sqlalchemy.engine.Engine [generated in 0.00011s] {'name': 'Test Public Group 4891185', 'description': 'This is a test group', 'category': 'Test', 'type': 'PUBLIC', 'id': UUID('d978703b-1286-4f54-9578-4e58ff72a302'), 'creator_id': UUID('a8e729a4-fd10-433a-8ffa-a43cd3fa3471')}
2024-12-18 23:01:08,551 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,552 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,552 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:08,552 INFO sqlalchemy.engine.Engine [generated in 0.00009s] {'pk_1': UUID('d978703b-1286-4f54-9578-4e58ff72a302')}
2024-12-18 23:01:08,554 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:08,555 INFO sqlalchemy.engine.Engine [generated in 0.00010s] {'param_1': UUID('d978703b-1286-4f54-9578-4e58ff72a302')}
2024-12-18 23:01:08,557 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,557 INFO sqlalchemy.engine.Engine [generated in 0.00010s] {'pk_1': UUID('a8e729a4-fd10-433a-8ffa-a43cd3fa3471')}
2024-12-18 23:01:08,558 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:08,558 INFO sqlalchemy.engine.Engine [generated in 0.00011s] {'student_id': UUID('a8e729a4-fd10-433a-8ffa-a43cd3fa3471'), 'group_id': UUID('d978703b-1286-4f54-9578-4e58ff72a302'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:08,559 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:08,559 INFO sqlalchemy.engine.Engine [generated in 0.00009s] {'param_1': UUID('d978703b-1286-4f54-9578-4e58ff72a302')}
2024-12-18 23:01:08,560 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:08,561 INFO sqlalchemy.engine.Engine [generated in 0.00009s] {'student_id': UUID('a8e729a4-fd10-433a-8ffa-a43cd3fa3471'), 'group_id': UUID('d978703b-1286-4f54-9578-4e58ff72a302')}
2024-12-18 23:01:08,561 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,562 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,562 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,562 INFO sqlalchemy.engine.Engine [generated in 0.00009s] {'pk_1': UUID('a8e729a4-fd10-433a-8ffa-a43cd3fa3471')}
2024-12-18 23:01:08,563 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:08,563 INFO sqlalchemy.engine.Engine [cached since 0.01328s ago] {'name': 'Test Private Group 4891185', 'description': 'This is a test group', 'category': 'Test', 'type': 'PRIVATE', 'id': UUID('2d2fff71-f503-47f2-8fe2-1ed3c6b8d52e'), 'creator_id': UUID('a8e729a4-fd10-433a-8ffa-a43cd3fa3471')}
2024-12-18 23:01:08,564 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,565 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,565 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:08,565 INFO sqlalchemy.engine.Engine [cached since 0.0123s ago] {'pk_1': UUID('2d2fff71-f503-47f2-8fe2-1ed3c6b8d52e')}
2024-12-18 23:01:08,565 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:08,565 INFO sqlalchemy.engine.Engine [cached since 0.01101s ago] {'param_1': UUID('2d2fff71-f503-47f2-8fe2-1ed3c6b8d52e')}
2024-12-18 23:01:08,567 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,567 INFO sqlalchemy.engine.Engine [cached since 0.009853s ago] {'pk_1': UUID('a8e729a4-fd10-433a-8ffa-a43cd3fa3471')}
2024-12-18 23:01:08,567 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:08,567 INFO sqlalchemy.engine.Engine [cached since 0.009491s ago] {'student_id': UUID('a8e729a4-fd10-433a-8ffa-a43cd3fa3471'), 'group_id': UUID('2d2fff71-f503-47f2-8fe2-1ed3c6b8d52e'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:08,568 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:08,568 INFO sqlalchemy.engine.Engine [cached since 0.008789s ago] {'param_1': UUID('2d2fff71-f503-47f2-8fe2-1ed3c6b8d52e')}
2024-12-18 23:01:08,569 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:08,569 INFO sqlalchemy.engine.Engine [cached since 0.008151s ago] {'student_id': UUID('a8e729a4-fd10-433a-8ffa-a43cd3fa3471'), 'group_id': UUID('2d2fff71-f503-47f2-8fe2-1ed3c6b8d52e')}
2024-12-18 23:01:08,569 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,570 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,571 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:01:08,571 INFO sqlalchemy.engine.Engine [cached since 0.02497s ago] {'number': 4989646, 'email': 's4989646@studenti.unige.it', 'name': 'Lorenzo', 'surname': 'Foschi', 'id': UUID('7eb3e1f4-fcd8-458f-a384-a7026d3d21ae')}
2024-12-18 23:01:08,571 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,572 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,572 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,572 INFO sqlalchemy.engine.Engine [cached since 0.02399s ago] {'pk_1': UUID('7eb3e1f4-fcd8-458f-a384-a7026d3d21ae')}
2024-12-18 23:01:08,573 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:08,573 INFO sqlalchemy.engine.Engine [cached since 0.02302s ago] {'name': 'Test Public Group 4989646', 'description': 'This is a test group', 'category': 'Test', 'type': 'PUBLIC', 'id': UUID('92cf5013-1c91-41ce-be46-0d0aec9bf614'), 'creator_id': UUID('7eb3e1f4-fcd8-458f-a384-a7026d3d21ae')}
2024-12-18 23:01:08,573 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,574 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,574 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:08,574 INFO sqlalchemy.engine.Engine [cached since 0.02206s ago] {'pk_1': UUID('92cf5013-1c91-41ce-be46-0d0aec9bf614')}
2024-12-18 23:01:08,575 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:08,575 INFO sqlalchemy.engine.Engine [cached since 0.02075s ago] {'param_1': UUID('92cf5013-1c91-41ce-be46-0d0aec9bf614')}
2024-12-18 23:01:08,576 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,576 INFO sqlalchemy.engine.Engine [cached since 0.01959s ago] {'pk_1': UUID('7eb3e1f4-fcd8-458f-a384-a7026d3d21ae')}
2024-12-18 23:01:08,577 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:08,577 INFO sqlalchemy.engine.Engine [cached since 0.01922s ago] {'student_id': UUID('7eb3e1f4-fcd8-458f-a384-a7026d3d21ae'), 'group_id': UUID('92cf5013-1c91-41ce-be46-0d0aec9bf614'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:08,577 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:08,577 INFO sqlalchemy.engine.Engine [cached since 0.01857s ago] {'param_1': UUID('92cf5013-1c91-41ce-be46-0d0aec9bf614')}
2024-12-18 23:01:08,578 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:08,578 INFO sqlalchemy.engine.Engine [cached since 0.01804s ago] {'student_id': UUID('7eb3e1f4-fcd8-458f-a384-a7026d3d21ae'), 'group_id': UUID('92cf5013-1c91-41ce-be46-0d0aec9bf614')}
2024-12-18 23:01:08,579 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,580 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,580 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,580 INFO sqlalchemy.engine.Engine [cached since 0.01756s ago] {'pk_1': UUID('7eb3e1f4-fcd8-458f-a384-a7026d3d21ae')}
2024-12-18 23:01:08,581 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:08,581 INFO sqlalchemy.engine.Engine [cached since 0.0307s ago] {'name': 'Test Private Group 4989646', 'description': 'This is a test group', 'category': 'Test', 'type': 'PRIVATE', 'id': UUID('2b9c8ce8-bf72-4ea1-a578-b3c9073c4da6'), 'creator_id': UUID('7eb3e1f4-fcd8-458f-a384-a7026d3d21ae')}
2024-12-18 23:01:08,581 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,582 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,582 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:08,582 INFO sqlalchemy.engine.Engine [cached since 0.02959s ago] {'pk_1': UUID('2b9c8ce8-bf72-4ea1-a578-b3c9073c4da6')}
2024-12-18 23:01:08,583 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:08,583 INFO sqlalchemy.engine.Engine [cached since 0.02827s ago] {'param_1': UUID('2b9c8ce8-bf72-4ea1-a578-b3c9073c4da6')}
2024-12-18 23:01:08,584 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,584 INFO sqlalchemy.engine.Engine [cached since 0.02709s ago] {'pk_1': UUID('7eb3e1f4-fcd8-458f-a384-a7026d3d21ae')}
2024-12-18 23:01:08,584 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:08,584 INFO sqlalchemy.engine.Engine [cached since 0.02677s ago] {'student_id': UUID('7eb3e1f4-fcd8-458f-a384-a7026d3d21ae'), 'group_id': UUID('2b9c8ce8-bf72-4ea1-a578-b3c9073c4da6'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:08,585 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:08,585 INFO sqlalchemy.engine.Engine [cached since 0.02607s ago] {'param_1': UUID('2b9c8ce8-bf72-4ea1-a578-b3c9073c4da6')}
2024-12-18 23:01:08,586 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:08,586 INFO sqlalchemy.engine.Engine [cached since 0.02553s ago] {'student_id': UUID('7eb3e1f4-fcd8-458f-a384-a7026d3d21ae'), 'group_id': UUID('2b9c8ce8-bf72-4ea1-a578-b3c9073c4da6')}
2024-12-18 23:01:08,586 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,588 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,588 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:01:08,588 INFO sqlalchemy.engine.Engine [cached since 0.04208s ago] {'number': 5806782, 'email': 's5806782@studenti.unige.it', 'name': 'Mimmo', 'surname': 'Torabi', 'id': UUID('c17abf34-2de7-45e0-93d4-b6c63a5bca4e')}
2024-12-18 23:01:08,588 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,589 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,589 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,589 INFO sqlalchemy.engine.Engine [cached since 0.04086s ago] {'pk_1': UUID('c17abf34-2de7-45e0-93d4-b6c63a5bca4e')}
2024-12-18 23:01:08,590 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:08,590 INFO sqlalchemy.engine.Engine [cached since 0.03986s ago] {'name': 'Test Public Group 5806782', 'description': 'This is a test group', 'category': 'Test', 'type': 'PUBLIC', 'id': UUID('7e46980e-d290-4fea-a8e1-18f4cf59f3f4'), 'creator_id': UUID('c17abf34-2de7-45e0-93d4-b6c63a5bca4e')}
2024-12-18 23:01:08,590 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,591 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,591 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:08,591 INFO sqlalchemy.engine.Engine [cached since 0.03883s ago] {'pk_1': UUID('7e46980e-d290-4fea-a8e1-18f4cf59f3f4')}
2024-12-18 23:01:08,592 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:08,592 INFO sqlalchemy.engine.Engine [cached since 0.03754s ago] {'param_1': UUID('7e46980e-d290-4fea-a8e1-18f4cf59f3f4')}
2024-12-18 23:01:08,593 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,593 INFO sqlalchemy.engine.Engine [cached since 0.0364s ago] {'pk_1': UUID('c17abf34-2de7-45e0-93d4-b6c63a5bca4e')}
2024-12-18 23:01:08,594 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:08,594 INFO sqlalchemy.engine.Engine [cached since 0.03601s ago] {'student_id': UUID('c17abf34-2de7-45e0-93d4-b6c63a5bca4e'), 'group_id': UUID('7e46980e-d290-4fea-a8e1-18f4cf59f3f4'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:08,594 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:08,594 INFO sqlalchemy.engine.Engine [cached since 0.0353s ago] {'param_1': UUID('7e46980e-d290-4fea-a8e1-18f4cf59f3f4')}
2024-12-18 23:01:08,595 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:08,595 INFO sqlalchemy.engine.Engine [cached since 0.03466s ago] {'student_id': UUID('c17abf34-2de7-45e0-93d4-b6c63a5bca4e'), 'group_id': UUID('7e46980e-d290-4fea-a8e1-18f4cf59f3f4')}
2024-12-18 23:01:08,595 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,596 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,596 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,596 INFO sqlalchemy.engine.Engine [cached since 0.03415s ago] {'pk_1': UUID('c17abf34-2de7-45e0-93d4-b6c63a5bca4e')}
2024-12-18 23:01:08,597 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:08,597 INFO sqlalchemy.engine.Engine [cached since 0.04718s ago] {'name': 'Test Private Group 5806782', 'description': 'This is a test group', 'category': 'Test', 'type': 'PRIVATE', 'id': UUID('bd862a47-58b9-4e95-8d44-c5250d1ded5b'), 'creator_id': UUID('c17abf34-2de7-45e0-93d4-b6c63a5bca4e')}
2024-12-18 23:01:08,598 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,598 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,599 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:08,599 INFO sqlalchemy.engine.Engine [cached since 0.04625s ago] {'pk_1': UUID('bd862a47-58b9-4e95-8d44-c5250d1ded5b')}
2024-12-18 23:01:08,599 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:08,599 INFO sqlalchemy.engine.Engine [cached since 0.04495s ago] {'param_1': UUID('bd862a47-58b9-4e95-8d44-c5250d1ded5b')}
2024-12-18 23:01:08,600 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,601 INFO sqlalchemy.engine.Engine [cached since 0.04382s ago] {'pk_1': UUID('c17abf34-2de7-45e0-93d4-b6c63a5bca4e')}
2024-12-18 23:01:08,602 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:08,602 INFO sqlalchemy.engine.Engine [cached since 0.04481s ago] {'student_id': UUID('c17abf34-2de7-45e0-93d4-b6c63a5bca4e'), 'group_id': UUID('bd862a47-58b9-4e95-8d44-c5250d1ded5b'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:08,603 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:08,603 INFO sqlalchemy.engine.Engine [cached since 0.04463s ago] {'param_1': UUID('bd862a47-58b9-4e95-8d44-c5250d1ded5b')}
2024-12-18 23:01:08,605 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:08,605 INFO sqlalchemy.engine.Engine [cached since 0.04437s ago] {'student_id': UUID('c17abf34-2de7-45e0-93d4-b6c63a5bca4e'), 'group_id': UUID('bd862a47-58b9-4e95-8d44-c5250d1ded5b')}
2024-12-18 23:01:08,605 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,606 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,607 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:01:08,607 INFO sqlalchemy.engine.Engine [cached since 0.06101s ago] {'number': 1234567, 'email': 's1234567@studenti.unige.it', 'name': 'Test Name', 'surname': 'Test Surname', 'id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:08,607 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,608 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,608 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,608 INFO sqlalchemy.engine.Engine [cached since 0.05975s ago] {'pk_1': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:08,609 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:08,609 INFO sqlalchemy.engine.Engine [cached since 0.0587s ago] {'name': 'Test Public Group 1234567', 'description': 'This is a test group', 'category': 'Test', 'type': 'PUBLIC', 'id': UUID('c47d42af-26ca-4b1e-b42c-d1164275903f'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:08,609 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,610 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,610 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:08,610 INFO sqlalchemy.engine.Engine [cached since 0.05748s ago] {'pk_1': UUID('c47d42af-26ca-4b1e-b42c-d1164275903f')}
2024-12-18 23:01:08,610 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:08,610 INFO sqlalchemy.engine.Engine [cached since 0.05609s ago] {'param_1': UUID('c47d42af-26ca-4b1e-b42c-d1164275903f')}
2024-12-18 23:01:08,612 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,612 INFO sqlalchemy.engine.Engine [cached since 0.05484s ago] {'pk_1': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:08,612 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:08,612 INFO sqlalchemy.engine.Engine [cached since 0.05442s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('c47d42af-26ca-4b1e-b42c-d1164275903f'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:08,612 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:08,612 INFO sqlalchemy.engine.Engine [cached since 0.05362s ago] {'param_1': UUID('c47d42af-26ca-4b1e-b42c-d1164275903f')}
2024-12-18 23:01:08,613 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:08,613 INFO sqlalchemy.engine.Engine [cached since 0.05295s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('c47d42af-26ca-4b1e-b42c-d1164275903f')}
2024-12-18 23:01:08,614 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,615 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,615 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,615 INFO sqlalchemy.engine.Engine [cached since 0.05268s ago] {'pk_1': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:08,616 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:08,616 INFO sqlalchemy.engine.Engine [cached since 0.0657s ago] {'name': 'Test Private Group 1234567', 'description': 'This is a test group', 'category': 'Test', 'type': 'PRIVATE', 'id': UUID('8b88d812-f15b-46ef-af1b-4175d25c37d8'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:08,616 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:08,617 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:08,617 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:08,617 INFO sqlalchemy.engine.Engine [cached since 0.06457s ago] {'pk_1': UUID('8b88d812-f15b-46ef-af1b-4175d25c37d8')}
2024-12-18 23:01:08,618 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:08,618 INFO sqlalchemy.engine.Engine [cached since 0.06319s ago] {'param_1': UUID('8b88d812-f15b-46ef-af1b-4175d25c37d8')}
2024-12-18 23:01:08,619 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:01:08,619 INFO sqlalchemy.engine.Engine [cached since 0.0624s ago] {'pk_1': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:08,620 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:08,620 INFO sqlalchemy.engine.Engine [cached since 0.06219s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('8b88d812-f15b-46ef-af1b-4175d25c37d8'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:08,620 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:08,620 INFO sqlalchemy.engine.Engine [cached since 0.0615s ago] {'param_1': UUID('8b88d812-f15b-46ef-af1b-4175d25c37d8')}
2024-12-18 23:01:08,621 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:08,621 INFO sqlalchemy.engine.Engine [cached since 0.06088s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('8b88d812-f15b-46ef-af1b-4175d25c37d8')}
2024-12-18 23:01:08,622 INFO sqlalchemy.engine.Engine COMMIT
============================= test session starts ==============================
platform linux -- Python 3.12.7, pytest-8.3.4, pluggy-1.5.0
rootdir: /home/lorenzo/Scrivania/CAPSTONE/unigate/backend
configfile: pyproject.toml
plugins: anyio-4.7.0, Faker-33.1.0
collected 42 items

tests/routes/test_block_student.py F..                                   [  7%]
tests/routes/test_block_user.py ......                                   [ 21%]
tests/routes/test_create_group.py ...                                    [ 28%]
tests/routes/test_get_groups.py .                                        [ 30%]
tests/routes/test_group_page.py ..                                       [ 35%]
tests/routes/test_join_private_groups.py F                               [ 38%]
tests/routes/test_join_public_group.py FFFF                              [ 47%]
tests/routes/test_leave_group.py FFFF                                    [ 57%]
tests/routes/test_login.py .F....                                        [ 71%]
tests/routes/test_my_groups.py FF                                        [ 76%]
tests/routes/test_private_group_join_request_response.py F.FFFFF         [ 92%]
tests/routes/test_unblock_student.py F..                                 [100%]

=================================== FAILURES ===================================
___________________________ test_block_user_success ____________________________

    def test_block_user_success():
        group_response = create_group()
        created_group_id = group_response["id"]
    
        token_data = authenticate_user()
        headers = {"Authorization": f"Bearer {token_data['access_token']}"}
    
        response = client.post(
            f"/groups/{created_group_id}/students/{test_student_id}/block",
            headers=headers,
        )
    
>       assert response.status_code == 200, f"Block failed: {response.json()}"
E       AssertionError: Block failed: {'detail': 'Student not found.'}
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/routes/test_block_student.py:58: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:09,850 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2024-12-18 23:01:09,850 INFO sqlalchemy.engine.Engine [raw sql] {}
2024-12-18 23:01:09,852 INFO sqlalchemy.engine.Engine select current_schema()
2024-12-18 23:01:09,852 INFO sqlalchemy.engine.Engine [raw sql] {}
2024-12-18 23:01:09,852 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2024-12-18 23:01:09,852 INFO sqlalchemy.engine.Engine [raw sql] {}
2024-12-18 23:01:09,854 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:09,865 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:09,865 INFO sqlalchemy.engine.Engine [generated in 0.00017s] {'number_1': 1234567}
2024-12-18 23:01:10,153 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:10,158 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:10,159 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:10,159 INFO sqlalchemy.engine.Engine [cached since 0.2938s ago] {'number_1': 1234567}
2024-12-18 23:01:10,163 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:10,163 INFO sqlalchemy.engine.Engine [generated in 0.00020s] {'name': 'TestGroup-5cfcc6', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PUBLIC', 'id': UUID('3bd16330-8754-4365-9193-fff7b461a5fa'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:10,165 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:10,165 INFO sqlalchemy.engine.Engine [generated in 0.00017s] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('3bd16330-8754-4365-9193-fff7b461a5fa'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:10,166 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:10,166 INFO sqlalchemy.engine.Engine [generated in 0.00014s] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('3bd16330-8754-4365-9193-fff7b461a5fa')}
2024-12-18 23:01:10,167 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:10,168 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:10,169 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:10,169 INFO sqlalchemy.engine.Engine [generated in 0.00013s] {'pk_1': UUID('3bd16330-8754-4365-9193-fff7b461a5fa')}
2024-12-18 23:01:10,172 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:10,172 INFO sqlalchemy.engine.Engine [generated in 0.00013s] {'param_1': UUID('3bd16330-8754-4365-9193-fff7b461a5fa')}
2024-12-18 23:01:10,177 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:10,177 INFO sqlalchemy.engine.Engine [generated in 0.00017s] {'param_1': UUID('3bd16330-8754-4365-9193-fff7b461a5fa')}
2024-12-18 23:01:10,179 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
2024-12-18 23:01:10,179 INFO sqlalchemy.engine.Engine [generated in 0.00013s] {'param_1': UUID('3bd16330-8754-4365-9193-fff7b461a5fa')}
2024-12-18 23:01:10,181 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:10,183 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:10,183 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:10,183 INFO sqlalchemy.engine.Engine [cached since 0.3187s ago] {'number_1': 1234567}
2024-12-18 23:01:10,447 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:10,449 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:10,450 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:10,450 INFO sqlalchemy.engine.Engine [generated in 0.00011s] {'id_1': UUID('3bd16330-8754-4365-9193-fff7b461a5fa')}
2024-12-18 23:01:10,452 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
2024-12-18 23:01:10,453 INFO sqlalchemy.engine.Engine [generated in 0.00021s] {'id_1': UUID('d6dcf3b1-425a-4864-88d3-525decebef18')}
2024-12-18 23:01:10,454 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:1846 select pg_catalog.version()
INFO     sqlalchemy.engine.Engine:base.py:1846 [raw sql] {}
INFO     sqlalchemy.engine.Engine:base.py:1846 select current_schema()
INFO     sqlalchemy.engine.Engine:base.py:1846 [raw sql] {}
INFO     sqlalchemy.engine.Engine:base.py:1846 show standard_conforming_strings
INFO     sqlalchemy.engine.Engine:base.py:1846 [raw sql] {}
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00017s] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 0.2938s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00020s] {'name': 'TestGroup-5cfcc6', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PUBLIC', 'id': UUID('3bd16330-8754-4365-9193-fff7b461a5fa'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00017s] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('3bd16330-8754-4365-9193-fff7b461a5fa'), 'date': datetime.date(2024, 12, 18)}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00014s] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('3bd16330-8754-4365-9193-fff7b461a5fa')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00013s] {'pk_1': UUID('3bd16330-8754-4365-9193-fff7b461a5fa')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00013s] {'param_1': UUID('3bd16330-8754-4365-9193-fff7b461a5fa')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00017s] {'param_1': UUID('3bd16330-8754-4365-9193-fff7b461a5fa')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00013s] {'param_1': UUID('3bd16330-8754-4365-9193-fff7b461a5fa')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 0.3187s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00011s] {'id_1': UUID('3bd16330-8754-4365-9193-fff7b461a5fa')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00021s] {'id_1': UUID('d6dcf3b1-425a-4864-88d3-525decebef18')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_______________________ test_join_private_group_success ________________________

    def test_join_private_group_success() -> None:
        creator_id = "508fc8f8-8e52-4adb-aa02-e9c9c41a0b19"
        group_id = "12345678-1234-5678-1234-567812345679"
        user_id = "b94e5917-ddbf-4fef-969d-fb67f78d0bd7"
    
        create_student(creator_id, "teststudenta1@example.com")
        create_private_group(group_id, creator_id)
        create_student(user_id, "teststudenta2@example.com")
    
        # User joins the private group
        response = client.post(
            "/groups/join_private_group",
            params={
                "student_id": user_id,
                "group_id": group_id,
            },
        )
>       assert response.status_code in [200, 400]
E       assert 405 in [200, 400]
E        +  where 405 = <Response [405 Method Not Allowed]>.status_code

tests/routes/test_join_private_groups.py:81: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:18,342 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:18,342 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:01:18,342 INFO sqlalchemy.engine.Engine [cached since 7.008s ago] {'id_1': UUID('508fc8f8-8e52-4adb-aa02-e9c9c41a0b19'), 'param_1': 1}
2024-12-18 23:01:18,343 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:01:18,343 INFO sqlalchemy.engine.Engine [cached since 7.007s ago] {'number': 69281, 'email': 'teststudenta1@example.com', 'name': 'mirco', 'surname': 'alessandrini', 'id': UUID('508fc8f8-8e52-4adb-aa02-e9c9c41a0b19')}
2024-12-18 23:01:18,344 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:18,354 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:18,354 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:01:18,354 INFO sqlalchemy.engine.Engine [cached since 7.02s ago] {'id_1': UUID('b94e5917-ddbf-4fef-969d-fb67f78d0bd7'), 'param_1': 1}
2024-12-18 23:01:18,355 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:01:18,355 INFO sqlalchemy.engine.Engine [cached since 7.019s ago] {'number': 27143, 'email': 'teststudenta2@example.com', 'name': 'mirco', 'surname': 'alessandrini', 'id': UUID('b94e5917-ddbf-4fef-969d-fb67f78d0bd7')}
2024-12-18 23:01:18,356 INFO sqlalchemy.engine.Engine COMMIT
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.008s ago] {'id_1': UUID('508fc8f8-8e52-4adb-aa02-e9c9c41a0b19'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.007s ago] {'number': 69281, 'email': 'teststudenta1@example.com', 'name': 'mirco', 'surname': 'alessandrini', 'id': UUID('508fc8f8-8e52-4adb-aa02-e9c9c41a0b19')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.02s ago] {'id_1': UUID('b94e5917-ddbf-4fef-969d-fb67f78d0bd7'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.019s ago] {'number': 27143, 'email': 'teststudenta2@example.com', 'name': 'mirco', 'surname': 'alessandrini', 'id': UUID('b94e5917-ddbf-4fef-969d-fb67f78d0bd7')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
__________________________ test_student_non_existent ___________________________

self = <sqlalchemy.engine.base.Connection object at 0x7f500a155bb0>
dialect = <sqlalchemy.dialects.postgresql.psycopg.PGDialect_psycopg object at 0x7f500db2f080>
context = <sqlalchemy.dialects.postgresql.psycopg.PGExecutionContext_psycopg object at 0x7f500a155670>
statement = <sqlalchemy.dialects.postgresql.psycopg.PGCompiler_psycopg object at 0x7f500a100a10>
parameters = [{'email': 'teststudent@example.com', 'id': UUID('12345678-1234-5678-1234-567812345678'), 'name': 'Test', 'number': 12345, ...}]

    def _exec_single_context(
        self,
        dialect: Dialect,
        context: ExecutionContext,
        statement: Union[str, Compiled],
        parameters: Optional[_AnyMultiExecuteParams],
    ) -> CursorResult[Any]:
        """continue the _execute_context() method for a single DBAPI
        cursor.execute() or cursor.executemany() call.
    
        """
        if dialect.bind_typing is BindTyping.SETINPUTSIZES:
            generic_setinputsizes = context._prepare_set_input_sizes()
    
            if generic_setinputsizes:
                try:
                    dialect.do_set_input_sizes(
                        context.cursor, generic_setinputsizes, context
                    )
                except BaseException as e:
                    self._handle_dbapi_exception(
                        e, str(statement), parameters, None, context
                    )
    
        cursor, str_statement, parameters = (
            context.cursor,
            context.statement,
            context.parameters,
        )
    
        effective_parameters: Optional[_AnyExecuteParams]
    
        if not context.executemany:
            effective_parameters = parameters[0]
        else:
            effective_parameters = parameters
    
        if self._has_events or self.engine._has_events:
            for fn in self.dispatch.before_cursor_execute:
                str_statement, effective_parameters = fn(
                    self,
                    cursor,
                    str_statement,
                    effective_parameters,
                    context,
                    context.executemany,
                )
    
        if self._echo:
            self._log_info(str_statement)
    
            stats = context._get_cache_stats()
    
            if not self.engine.hide_parameters:
                self._log_info(
                    "[%s] %r",
                    stats,
                    sql_util._repr_params(
                        effective_parameters,
                        batches=10,
                        ismulti=context.executemany,
                    ),
                )
            else:
                self._log_info(
                    "[%s] [SQL parameters hidden due to hide_parameters=True]",
                    stats,
                )
    
        evt_handled: bool = False
        try:
            if context.execute_style is ExecuteStyle.EXECUTEMANY:
                effective_parameters = cast(
                    "_CoreMultiExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_executemany:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_executemany(
                        cursor,
                        str_statement,
                        effective_parameters,
                        context,
                    )
            elif not effective_parameters and context.no_parameters:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute_no_params:
                        if fn(cursor, str_statement, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_execute_no_params(
                        cursor, str_statement, context
                    )
            else:
                effective_parameters = cast(
                    "_CoreSingleExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
>                   self.dialect.do_execute(
                        cursor, str_statement, effective_parameters, context
                    )

.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.12/site-packages/sqlalchemy/engine/default.py:941: in do_execute
    cursor.execute(statement, parameters)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <psycopg.Cursor [closed] [IDLE] (host=localhost user=postgres database=unigate) at 0x7f500a1893d0>
query = 'INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)'
params = {'email': 'teststudent@example.com', 'id': UUID('12345678-1234-5678-1234-567812345678'), 'name': 'Test', 'number': 12345, ...}

    def execute(
        self,
        query: Query,
        params: Params | None = None,
        *,
        prepare: bool | None = None,
        binary: bool | None = None,
    ) -> Self:
        """
        Execute a query or command to the database.
        """
        try:
            with self._conn.lock:
                self._conn.wait(
                    self._execute_gen(query, params, prepare=prepare, binary=binary)
                )
        except e._NO_TRACEBACK as ex:
>           raise ex.with_traceback(None)
E           psycopg.errors.UniqueViolation: duplicate key value violates unique constraint "ix_students_email"
E           DETAIL:  Key (email)=(teststudent@example.com) already exists.

.venv/lib/python3.12/site-packages/psycopg/cursor.py:97: UniqueViolation

The above exception was the direct cause of the following exception:

    def test_student_non_existent() -> None:
        student_id = "12345678-1234-5678-1234-567812345678"
>       create_student(student_id=student_id, number=12345, mail="teststudent")

tests/routes/test_join_public_group.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/routes/test_join_public_group.py:45: in create_student
    session.commit()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2028: in commit
    trans.commit(_to_root=True)
<string>:2: in commit
    ???
.venv/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
<string>:2: in _prepare_impl
    ???
.venv/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4352: in flush
    self._flush(objects)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4487: in _flush
    with util.safe_reraise():
.venv/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py:146: in __exit__
    raise exc_value.with_traceback(exc_tb)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4448: in _flush
    flush_context.execute()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
.venv/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
.venv/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py:1048: in _emit_insert_statements
    result = connection.execute(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1418: in execute
    return meth(
.venv/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:515: in _execute_on_connection
    return connection._execute_clauseelement(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1640: in _execute_clauseelement
    ret = self._execute_context(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2355: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/default.py:941: in do_execute
    cursor.execute(statement, parameters)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <psycopg.Cursor [closed] [IDLE] (host=localhost user=postgres database=unigate) at 0x7f500a1893d0>
query = 'INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)'
params = {'email': 'teststudent@example.com', 'id': UUID('12345678-1234-5678-1234-567812345678'), 'name': 'Test', 'number': 12345, ...}

    def execute(
        self,
        query: Query,
        params: Params | None = None,
        *,
        prepare: bool | None = None,
        binary: bool | None = None,
    ) -> Self:
        """
        Execute a query or command to the database.
        """
        try:
            with self._conn.lock:
                self._conn.wait(
                    self._execute_gen(query, params, prepare=prepare, binary=binary)
                )
        except e._NO_TRACEBACK as ex:
>           raise ex.with_traceback(None)
E           sqlalchemy.exc.IntegrityError: (psycopg.errors.UniqueViolation) duplicate key value violates unique constraint "ix_students_email"
E           DETAIL:  Key (email)=(teststudent@example.com) already exists.
E           [SQL: INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)]
E           [parameters: {'number': 12345, 'email': 'teststudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345678')}]
E           (Background on this error at: https://sqlalche.me/e/20/gkpj)

.venv/lib/python3.12/site-packages/psycopg/cursor.py:97: IntegrityError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:18,361 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:18,361 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:01:18,361 INFO sqlalchemy.engine.Engine [cached since 7.027s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345678'), 'param_1': 1}
2024-12-18 23:01:18,362 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:01:18,362 INFO sqlalchemy.engine.Engine [cached since 7.027s ago] {'number': 12345, 'email': 'teststudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345678')}
2024-12-18 23:01:18,363 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.027s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345678'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.027s ago] {'number': 12345, 'email': 'teststudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345678')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
___________________________ test_group_non_existant ____________________________

self = <sqlalchemy.engine.base.Connection object at 0x7f500c1eca10>
dialect = <sqlalchemy.dialects.postgresql.psycopg.PGDialect_psycopg object at 0x7f500db2f080>
context = <sqlalchemy.dialects.postgresql.psycopg.PGExecutionContext_psycopg object at 0x7f500a1544a0>
statement = <sqlalchemy.dialects.postgresql.psycopg.PGCompiler_psycopg object at 0x7f500a100a10>
parameters = [{'email': 'teststudent@example.com', 'id': UUID('12345678-1234-5678-1234-567812345678'), 'name': 'Test', 'number': 12345, ...}]

    def _exec_single_context(
        self,
        dialect: Dialect,
        context: ExecutionContext,
        statement: Union[str, Compiled],
        parameters: Optional[_AnyMultiExecuteParams],
    ) -> CursorResult[Any]:
        """continue the _execute_context() method for a single DBAPI
        cursor.execute() or cursor.executemany() call.
    
        """
        if dialect.bind_typing is BindTyping.SETINPUTSIZES:
            generic_setinputsizes = context._prepare_set_input_sizes()
    
            if generic_setinputsizes:
                try:
                    dialect.do_set_input_sizes(
                        context.cursor, generic_setinputsizes, context
                    )
                except BaseException as e:
                    self._handle_dbapi_exception(
                        e, str(statement), parameters, None, context
                    )
    
        cursor, str_statement, parameters = (
            context.cursor,
            context.statement,
            context.parameters,
        )
    
        effective_parameters: Optional[_AnyExecuteParams]
    
        if not context.executemany:
            effective_parameters = parameters[0]
        else:
            effective_parameters = parameters
    
        if self._has_events or self.engine._has_events:
            for fn in self.dispatch.before_cursor_execute:
                str_statement, effective_parameters = fn(
                    self,
                    cursor,
                    str_statement,
                    effective_parameters,
                    context,
                    context.executemany,
                )
    
        if self._echo:
            self._log_info(str_statement)
    
            stats = context._get_cache_stats()
    
            if not self.engine.hide_parameters:
                self._log_info(
                    "[%s] %r",
                    stats,
                    sql_util._repr_params(
                        effective_parameters,
                        batches=10,
                        ismulti=context.executemany,
                    ),
                )
            else:
                self._log_info(
                    "[%s] [SQL parameters hidden due to hide_parameters=True]",
                    stats,
                )
    
        evt_handled: bool = False
        try:
            if context.execute_style is ExecuteStyle.EXECUTEMANY:
                effective_parameters = cast(
                    "_CoreMultiExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_executemany:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_executemany(
                        cursor,
                        str_statement,
                        effective_parameters,
                        context,
                    )
            elif not effective_parameters and context.no_parameters:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute_no_params:
                        if fn(cursor, str_statement, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_execute_no_params(
                        cursor, str_statement, context
                    )
            else:
                effective_parameters = cast(
                    "_CoreSingleExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
>                   self.dialect.do_execute(
                        cursor, str_statement, effective_parameters, context
                    )

.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.12/site-packages/sqlalchemy/engine/default.py:941: in do_execute
    cursor.execute(statement, parameters)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <psycopg.Cursor [closed] [IDLE] (host=localhost user=postgres database=unigate) at 0x7f500a18a090>
query = 'INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)'
params = {'email': 'teststudent@example.com', 'id': UUID('12345678-1234-5678-1234-567812345678'), 'name': 'Test', 'number': 12345, ...}

    def execute(
        self,
        query: Query,
        params: Params | None = None,
        *,
        prepare: bool | None = None,
        binary: bool | None = None,
    ) -> Self:
        """
        Execute a query or command to the database.
        """
        try:
            with self._conn.lock:
                self._conn.wait(
                    self._execute_gen(query, params, prepare=prepare, binary=binary)
                )
        except e._NO_TRACEBACK as ex:
>           raise ex.with_traceback(None)
E           psycopg.errors.UniqueViolation: duplicate key value violates unique constraint "ix_students_email"
E           DETAIL:  Key (email)=(teststudent@example.com) already exists.

.venv/lib/python3.12/site-packages/psycopg/cursor.py:97: UniqueViolation

The above exception was the direct cause of the following exception:

    def test_group_non_existant() -> None:
        student_id = "12345678-1234-5678-1234-567812345678"
>       create_student(student_id=student_id, number=12345, mail="teststudent")

tests/routes/test_join_public_group.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/routes/test_join_public_group.py:45: in create_student
    session.commit()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2028: in commit
    trans.commit(_to_root=True)
<string>:2: in commit
    ???
.venv/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
<string>:2: in _prepare_impl
    ???
.venv/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4352: in flush
    self._flush(objects)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4487: in _flush
    with util.safe_reraise():
.venv/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py:146: in __exit__
    raise exc_value.with_traceback(exc_tb)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4448: in _flush
    flush_context.execute()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
.venv/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
.venv/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py:1048: in _emit_insert_statements
    result = connection.execute(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1418: in execute
    return meth(
.venv/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:515: in _execute_on_connection
    return connection._execute_clauseelement(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1640: in _execute_clauseelement
    ret = self._execute_context(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2355: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/default.py:941: in do_execute
    cursor.execute(statement, parameters)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <psycopg.Cursor [closed] [IDLE] (host=localhost user=postgres database=unigate) at 0x7f500a18a090>
query = 'INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)'
params = {'email': 'teststudent@example.com', 'id': UUID('12345678-1234-5678-1234-567812345678'), 'name': 'Test', 'number': 12345, ...}

    def execute(
        self,
        query: Query,
        params: Params | None = None,
        *,
        prepare: bool | None = None,
        binary: bool | None = None,
    ) -> Self:
        """
        Execute a query or command to the database.
        """
        try:
            with self._conn.lock:
                self._conn.wait(
                    self._execute_gen(query, params, prepare=prepare, binary=binary)
                )
        except e._NO_TRACEBACK as ex:
>           raise ex.with_traceback(None)
E           sqlalchemy.exc.IntegrityError: (psycopg.errors.UniqueViolation) duplicate key value violates unique constraint "ix_students_email"
E           DETAIL:  Key (email)=(teststudent@example.com) already exists.
E           [SQL: INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)]
E           [parameters: {'number': 12345, 'email': 'teststudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345678')}]
E           (Background on this error at: https://sqlalche.me/e/20/gkpj)

.venv/lib/python3.12/site-packages/psycopg/cursor.py:97: IntegrityError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:18,600 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:18,600 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:01:18,600 INFO sqlalchemy.engine.Engine [cached since 7.266s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345678'), 'param_1': 1}
2024-12-18 23:01:18,602 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:01:18,602 INFO sqlalchemy.engine.Engine [cached since 7.266s ago] {'number': 12345, 'email': 'teststudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345678')}
2024-12-18 23:01:18,603 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.266s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345678'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.266s ago] {'number': 12345, 'email': 'teststudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345678')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_______________________________ test_valid_join ________________________________

    def test_valid_join() -> None:
        student_id = "12345678-1234-5678-1234-567812345677"
        create_student(student_id=student_id, number=12346, mail="teststudentss")
        group_id = "12345678-1234-5678-1234-567812345678"
    
        r = client.post(
            "/groups/join_public_group",
            params={
                "student_id": student_id,
                "group_id": group_id,
            },
        )
>       assert r.status_code == 200
E       assert 405 == 200
E        +  where 405 = <Response [405 Method Not Allowed]>.status_code

tests/routes/test_join_public_group.py:107: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:18,830 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:18,831 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:01:18,831 INFO sqlalchemy.engine.Engine [cached since 7.497s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345677'), 'param_1': 1}
2024-12-18 23:01:18,832 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:01:18,832 INFO sqlalchemy.engine.Engine [cached since 7.496s ago] {'number': 12346, 'email': 'teststudentss@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345677')}
2024-12-18 23:01:18,833 INFO sqlalchemy.engine.Engine COMMIT
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.497s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345677'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.496s ago] {'number': 12346, 'email': 'teststudentss@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345677')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
____________________________ test_double_enrollment ____________________________

client = <starlette.testclient.TestClient object at 0x7f500a1007a0>

    def test_double_enrollment(client: TestClient) -> None:
        student_id = "12345678-1234-5678-1234-567812345677"
        create_student(student_id=student_id, number=12346, mail="teststudentss")
        group_id = "12345678-1234-5678-1234-567812345678"
    
        r = client.post(
            "/groups/join_public_group",
            params={
                "student_id": student_id,
                "group_id": group_id,
            },
        )
>       assert r.status_code == 200
E       assert 405 == 200
E        +  where 405 = <Response [405 Method Not Allowed]>.status_code

tests/routes/test_join_public_group.py:123: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:18,840 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:18,840 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:01:18,840 INFO sqlalchemy.engine.Engine [cached since 7.506s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345677'), 'param_1': 1}
2024-12-18 23:01:18,841 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.506s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345677'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
___________________________ test_group_non_existant ____________________________

    def test_group_non_existant() -> None:
        create_student(student_id=student_id, number=12347, mail="testsdstudent")
        r = client.post(
            "/groups/" + group_id + "/leave",
            params={
                "student_id": student_id,
                "group_id": group_id,
            },
        )
>       assert r.status_code == 200
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/routes/test_leave_group.py:74: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:18,846 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:18,846 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:01:18,846 INFO sqlalchemy.engine.Engine [cached since 7.512s ago] {'id_1': UUID('12745678-1234-5678-1234-567812345678'), 'param_1': 1}
2024-12-18 23:01:18,847 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:01:18,847 INFO sqlalchemy.engine.Engine [cached since 7.511s ago] {'number': 12347, 'email': 'testsdstudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12745678-1234-5678-1234-567812345678')}
2024-12-18 23:01:18,847 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:18,849 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:18,850 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:18,850 INFO sqlalchemy.engine.Engine [cached since 8.4s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
2024-12-18 23:01:18,851 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.512s ago] {'id_1': UUID('12745678-1234-5678-1234-567812345678'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.511s ago] {'number': 12347, 'email': 'testsdstudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12745678-1234-5678-1234-567812345678')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 8.4s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
__________________________ test_student_non_existent ___________________________

    def test_student_non_existent() -> None:
        create_group(student_id=student_id, group_id=group_id)
    
        r = client.post(
            "/groups/" + group_id + "/leave",
            params={
                "student_id": student_id,
                "group_id": group_id,
            },
        )
>       assert r.status_code == 200
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/routes/test_leave_group.py:88: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:18,856 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:18,857 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:18,857 INFO sqlalchemy.engine.Engine [cached since 8.407s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
2024-12-18 23:01:18,858 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 8.407s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_______________________________ test_valid_leave _______________________________

    def test_valid_leave() -> None:
        create_student(student_id=student_id2, number=12349, mail="testsstudent")
        client.post(
            "/groups/join_public_group",
            params={
                "student_id": student_id,
                "group_id": group_id,
            },
        )
        client.post(
            "/groups/join_public_group",
            params={
                "student_id": student_id2,
                "group_id": group_id,
            },
        )
    
        group_json = client.get("/groups/" + group_id)
        group = group_json.json()
    
        response = client.post(
            "/groups/" + group_id + "/leave",
            params={
                "group_id": group_id,
                "student_id": student_id2,
            },
        )
    
>       group["members_count"] = group["members_count"] - 1
E       KeyError: 'members_count'

tests/routes/test_leave_group.py:120: KeyError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:18,862 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:18,862 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:01:18,862 INFO sqlalchemy.engine.Engine [cached since 7.528s ago] {'id_1': UUID('12345678-1234-5778-1234-567812345678'), 'param_1': 1}
2024-12-18 23:01:18,863 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:01:18,863 INFO sqlalchemy.engine.Engine [cached since 7.527s ago] {'number': 12349, 'email': 'testsstudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5778-1234-567812345678')}
2024-12-18 23:01:18,864 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:18,867 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:18,868 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:18,868 INFO sqlalchemy.engine.Engine [cached since 8.418s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
2024-12-18 23:01:18,868 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:18,871 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:18,871 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:18,871 INFO sqlalchemy.engine.Engine [cached since 8.421s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
2024-12-18 23:01:18,872 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.528s ago] {'id_1': UUID('12345678-1234-5778-1234-567812345678'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.527s ago] {'number': 12349, 'email': 'testsstudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5778-1234-567812345678')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 8.418s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 8.421s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_________________________ test_valid_leave_no_members __________________________

client = <starlette.testclient.TestClient object at 0x7f5009f5b2f0>

    def test_valid_leave_no_members(client: TestClient) -> None:
        response = client.post(
            "/groups/" + group_id + "/leave",
            params={
                "student_id": student_id,
                "group_id": group_id,
            },
        )
    
>       assert response.status_code == 200
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/routes/test_leave_group.py:140: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:18,877 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:18,877 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:18,877 INFO sqlalchemy.engine.Engine [cached since 8.427s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
2024-12-18 23:01:18,878 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 8.427s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_________________________ test_login_invalid_username __________________________

    def test_login_invalid_username() -> None:
        """Test login with an invalid username."""
>       response = client.post(
            "/auth/login", data={"username": INVALID_USERNAME, "password": VALID_PASSWORD}
        )

tests/routes/test_login.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.12/site-packages/starlette/testclient.py:593: in post
    return super().post(
.venv/lib/python3.12/site-packages/httpx/_client.py:1144: in post
    return self.request(
.venv/lib/python3.12/site-packages/starlette/testclient.py:484: in request
    return super().request(
.venv/lib/python3.12/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv/lib/python3.12/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
.venv/lib/python3.12/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
.venv/lib/python3.12/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
.venv/lib/python3.12/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
.venv/lib/python3.12/site-packages/starlette/testclient.py:377: in handle_request
    raise exc
.venv/lib/python3.12/site-packages/starlette/testclient.py:374: in handle_request
    portal.call(self.app, scope, receive, send)
.venv/lib/python3.12/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv/lib/python3.12/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
.venv/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
.venv/lib/python3.12/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
.venv/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
.venv/lib/python3.12/site-packages/starlette/routing.py:715: in __call__
    await self.middleware_stack(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/routing.py:735: in app
    await route.handle(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
.venv/lib/python3.12/site-packages/starlette/routing.py:73: in app
    response = await f(request)
.venv/lib/python3.12/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
.venv/lib/python3.12/site-packages/fastapi/routing.py:214: in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
.venv/lib/python3.12/site-packages/starlette/concurrency.py:39: in run_in_threadpool
    return await anyio.to_thread.run_sync(func, *args)
.venv/lib/python3.12/site-packages/anyio/to_thread.py:56: in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
.venv/lib/python3.12/site-packages/anyio/_backends/_asyncio.py:2505: in run_sync_in_worker_thread
    return await future
.venv/lib/python3.12/site-packages/anyio/_backends/_asyncio.py:1005: in run
    result = context.run(func, *args)
unigate/routes/auth.py:33: in login
    role, number = get_role_and_number(form_data.username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

username = 'invalid_user'

    def get_role_and_number(username: str) -> tuple[str, int]:
        if len(username) < 2:
            raise HTTPException(status_code=401, detail="Invalid username")
        role = username[0]
>       number = int(username[1:])
E       ValueError: invalid literal for int() with base 10: 'nvalid_user'

unigate/routes/auth.py:20: ValueError
_____________________________ test_my_groups_empty _____________________________

    def test_my_groups_empty() -> None:
        create_student(student_id=student_id, number=159, mail="puffi")
        response = client.post(
            "/groups/get_student_groups",
            params={
                "student_id": student_id,
            },
        )
        data = response.json()
>       assert isinstance(data, list)
E       AssertionError: assert False
E        +  where False = isinstance({'detail': 'Method Not Allowed'}, list)

tests/routes/test_my_groups.py:77: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:19,611 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:19,611 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:01:19,611 INFO sqlalchemy.engine.Engine [cached since 8.277s ago] {'id_1': UUID('12345672-1234-5678-1234-567812345677'), 'param_1': 1}
2024-12-18 23:01:19,613 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:01:19,613 INFO sqlalchemy.engine.Engine [cached since 8.277s ago] {'number': 159, 'email': 'puffi@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345672-1234-5678-1234-567812345677')}
2024-12-18 23:01:19,613 INFO sqlalchemy.engine.Engine COMMIT
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 8.277s ago] {'id_1': UUID('12345672-1234-5678-1234-567812345677'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 8.277s ago] {'number': 159, 'email': 'puffi@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345672-1234-5678-1234-567812345677')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
________________________________ test_my_groups ________________________________

    def test_my_groups() -> None:
        group = create_group(
            student_id=student_id, group_id="12345672-1234-5678-1234-567812345657"
        )
        client.post(
            "/groups/join_public_group",
            params={
                "student_id": student_id,
>               "group_id": group["id"],
            },
        )
E       KeyError: 'id'

tests/routes/test_my_groups.py:89: KeyError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:19,625 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:19,626 INFO sqlalchemy.engine.Engine SELECT groups.name AS groups_name, groups.description AS groups_description, groups.category AS groups_category, groups.type AS groups_type, groups.id AS groups_id, groups.creator_id AS groups_creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:01:19,626 INFO sqlalchemy.engine.Engine [generated in 0.00014s] {'id_1': UUID('12345672-1234-5678-1234-567812345657'), 'param_1': 1}
2024-12-18 23:01:19,627 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name AS groups_name, groups.description AS groups_description, groups.category AS groups_category, groups.type AS groups_type, groups.id AS groups_id, groups.creator_id AS groups_creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00014s] {'id_1': UUID('12345672-1234-5678-1234-567812345657'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_________________________ test_create_request_success __________________________

    def test_create_request_success() -> None:
        create_student(student_id=student_id, email_par="ciao@example.com")
        create_student(student_id=student_id2, email_par="ciao2@example.com")
        create_private_group(group_id, student_id)
    
        token_data = authenticate_user()
        token = token_data["access_token"]
        headers = {"Authorization": f"Bearer {token}"}
    
        response = client.post(f"/groups/{group_id}/join", headers=headers)
>       assert response.status_code == 200
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/routes/test_private_group_join_request_response.py:79: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:19,631 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:19,632 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
2024-12-18 23:01:19,632 INFO sqlalchemy.engine.Engine [cached since 9.179s ago] {'id_1': UUID('4f6927ad-a5cf-4059-a84c-b1dfb8bf5369')}
2024-12-18 23:01:19,633 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:01:19,633 INFO sqlalchemy.engine.Engine [cached since 8.297s ago] {'number': 29692, 'email': 'ciao@example.com', 'name': 'mirco', 'surname': 'alessandrini', 'id': UUID('4f6927ad-a5cf-4059-a84c-b1dfb8bf5369')}
2024-12-18 23:01:19,633 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:19,634 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:19,634 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
2024-12-18 23:01:19,634 INFO sqlalchemy.engine.Engine [cached since 9.182s ago] {'id_1': UUID('de838847-14ae-41d0-99af-9f6354ab2fb9')}
2024-12-18 23:01:19,635 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:01:19,635 INFO sqlalchemy.engine.Engine [cached since 8.299s ago] {'number': 50243, 'email': 'ciao2@example.com', 'name': 'mirco', 'surname': 'alessandrini', 'id': UUID('de838847-14ae-41d0-99af-9f6354ab2fb9')}
2024-12-18 23:01:19,635 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:19,637 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:19,637 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:19,637 INFO sqlalchemy.engine.Engine [cached since 9.773s ago] {'number_1': 1234567}
2024-12-18 23:01:19,902 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:19,906 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:19,906 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:19,906 INFO sqlalchemy.engine.Engine [cached since 10.04s ago] {'number_1': 1234567}
2024-12-18 23:01:19,908 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:19,908 INFO sqlalchemy.engine.Engine [cached since 9.745s ago] {'name': 'TestGroup-eadknI', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('3179d6f3-6360-4c38-8d23-41429db4ecc0'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:19,909 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:19,909 INFO sqlalchemy.engine.Engine [cached since 9.744s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('3179d6f3-6360-4c38-8d23-41429db4ecc0'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:19,909 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:19,910 INFO sqlalchemy.engine.Engine [cached since 9.743s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('3179d6f3-6360-4c38-8d23-41429db4ecc0')}
2024-12-18 23:01:19,910 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:19,918 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:19,918 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:19,918 INFO sqlalchemy.engine.Engine [cached since 9.749s ago] {'pk_1': UUID('3179d6f3-6360-4c38-8d23-41429db4ecc0')}
2024-12-18 23:01:19,920 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:19,920 INFO sqlalchemy.engine.Engine [cached since 9.748s ago] {'param_1': UUID('3179d6f3-6360-4c38-8d23-41429db4ecc0')}
2024-12-18 23:01:19,921 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:19,921 INFO sqlalchemy.engine.Engine [cached since 9.744s ago] {'param_1': UUID('3179d6f3-6360-4c38-8d23-41429db4ecc0')}
2024-12-18 23:01:19,921 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
2024-12-18 23:01:19,922 INFO sqlalchemy.engine.Engine [cached since 9.743s ago] {'param_1': UUID('3179d6f3-6360-4c38-8d23-41429db4ecc0')}
2024-12-18 23:01:19,923 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:19,926 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:19,927 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:19,927 INFO sqlalchemy.engine.Engine [cached since 10.06s ago] {'number_1': 1234567}
2024-12-18 23:01:20,193 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:20,196 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:20,196 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:20,196 INFO sqlalchemy.engine.Engine [cached since 9.746s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
2024-12-18 23:01:20,197 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 9.179s ago] {'id_1': UUID('4f6927ad-a5cf-4059-a84c-b1dfb8bf5369')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 8.297s ago] {'number': 29692, 'email': 'ciao@example.com', 'name': 'mirco', 'surname': 'alessandrini', 'id': UUID('4f6927ad-a5cf-4059-a84c-b1dfb8bf5369')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 9.182s ago] {'id_1': UUID('de838847-14ae-41d0-99af-9f6354ab2fb9')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 8.299s ago] {'number': 50243, 'email': 'ciao2@example.com', 'name': 'mirco', 'surname': 'alessandrini', 'id': UUID('de838847-14ae-41d0-99af-9f6354ab2fb9')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 9.773s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.04s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 9.745s ago] {'name': 'TestGroup-eadknI', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('3179d6f3-6360-4c38-8d23-41429db4ecc0'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 9.744s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('3179d6f3-6360-4c38-8d23-41429db4ecc0'), 'date': datetime.date(2024, 12, 18)}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 9.743s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('3179d6f3-6360-4c38-8d23-41429db4ecc0')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 9.749s ago] {'pk_1': UUID('3179d6f3-6360-4c38-8d23-41429db4ecc0')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 9.748s ago] {'param_1': UUID('3179d6f3-6360-4c38-8d23-41429db4ecc0')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 9.744s ago] {'param_1': UUID('3179d6f3-6360-4c38-8d23-41429db4ecc0')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 9.743s ago] {'param_1': UUID('3179d6f3-6360-4c38-8d23-41429db4ecc0')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.06s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 9.746s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
______________________ test_create_request_already_exists ______________________

    def test_create_request_already_exists() -> None:
        create_student(student_id=student_id, email_par="ciao@example.com")
        create_student(student_id=student_id2, email_par="ciao2@example.com")
        create_private_group(group_id, student_id)
    
        token_data = authenticate_user()
        token = token_data["access_token"]
        headers = {"Authorization": f"Bearer {token}"}
    
        client.post(f"/groups/{group_id}/join", headers=headers)
        response = client.post(f"/groups/{group_id}/join", headers=headers)
    
>       assert response.status_code == 400
E       assert 404 == 400
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/routes/test_private_group_join_request_response.py:111: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:20,474 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:20,474 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
2024-12-18 23:01:20,474 INFO sqlalchemy.engine.Engine [cached since 10.02s ago] {'id_1': UUID('4f6927ad-a5cf-4059-a84c-b1dfb8bf5369')}
2024-12-18 23:01:20,475 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:20,475 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:20,476 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
2024-12-18 23:01:20,476 INFO sqlalchemy.engine.Engine [cached since 10.02s ago] {'id_1': UUID('de838847-14ae-41d0-99af-9f6354ab2fb9')}
2024-12-18 23:01:20,476 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:20,479 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:20,479 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:20,479 INFO sqlalchemy.engine.Engine [cached since 10.61s ago] {'number_1': 1234567}
2024-12-18 23:01:20,756 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:20,760 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:20,760 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:20,760 INFO sqlalchemy.engine.Engine [cached since 10.9s ago] {'number_1': 1234567}
2024-12-18 23:01:20,762 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:20,762 INFO sqlalchemy.engine.Engine [cached since 10.6s ago] {'name': 'TestGroup-YFcwAC', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('1059381d-a6bd-4853-aaf4-d21a2ce189c2'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:20,762 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:20,762 INFO sqlalchemy.engine.Engine [cached since 10.6s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('1059381d-a6bd-4853-aaf4-d21a2ce189c2'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:20,763 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:20,763 INFO sqlalchemy.engine.Engine [cached since 10.6s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('1059381d-a6bd-4853-aaf4-d21a2ce189c2')}
2024-12-18 23:01:20,763 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:20,771 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:20,771 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:20,771 INFO sqlalchemy.engine.Engine [cached since 10.6s ago] {'pk_1': UUID('1059381d-a6bd-4853-aaf4-d21a2ce189c2')}
2024-12-18 23:01:20,772 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:20,772 INFO sqlalchemy.engine.Engine [cached since 10.6s ago] {'param_1': UUID('1059381d-a6bd-4853-aaf4-d21a2ce189c2')}
2024-12-18 23:01:20,773 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:20,774 INFO sqlalchemy.engine.Engine [cached since 10.6s ago] {'param_1': UUID('1059381d-a6bd-4853-aaf4-d21a2ce189c2')}
2024-12-18 23:01:20,775 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
2024-12-18 23:01:20,775 INFO sqlalchemy.engine.Engine [cached since 10.6s ago] {'param_1': UUID('1059381d-a6bd-4853-aaf4-d21a2ce189c2')}
2024-12-18 23:01:20,776 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:20,779 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:20,779 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:20,779 INFO sqlalchemy.engine.Engine [cached since 10.91s ago] {'number_1': 1234567}
2024-12-18 23:01:21,045 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:21,049 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:21,049 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:21,049 INFO sqlalchemy.engine.Engine [cached since 10.6s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
2024-12-18 23:01:21,050 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:21,053 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:21,053 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:21,053 INFO sqlalchemy.engine.Engine [cached since 10.6s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
2024-12-18 23:01:21,054 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.02s ago] {'id_1': UUID('4f6927ad-a5cf-4059-a84c-b1dfb8bf5369')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.02s ago] {'id_1': UUID('de838847-14ae-41d0-99af-9f6354ab2fb9')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.61s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.9s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.6s ago] {'name': 'TestGroup-YFcwAC', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('1059381d-a6bd-4853-aaf4-d21a2ce189c2'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.6s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('1059381d-a6bd-4853-aaf4-d21a2ce189c2'), 'date': datetime.date(2024, 12, 18)}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.6s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('1059381d-a6bd-4853-aaf4-d21a2ce189c2')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.6s ago] {'pk_1': UUID('1059381d-a6bd-4853-aaf4-d21a2ce189c2')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.6s ago] {'param_1': UUID('1059381d-a6bd-4853-aaf4-d21a2ce189c2')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.6s ago] {'param_1': UUID('1059381d-a6bd-4853-aaf4-d21a2ce189c2')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.6s ago] {'param_1': UUID('1059381d-a6bd-4853-aaf4-d21a2ce189c2')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.91s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.6s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 10.6s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_______________________ test_get_all_requests_for_group ________________________

    def test_get_all_requests_for_group() -> None:
        create_private_group(group_id, student_id)
    
        token_data = authenticate_user()
        token = token_data["access_token"]
        headers = {"Authorization": f"Bearer {token}"}
    
        # First, create a join request so that we have something to fetch:
        client.post(f"/groups/{group_id}/join", headers=headers)
    
        # Now fetch the requests
        response = client.get(f"/groups/{group_id}/requests", headers=headers)
        data = response.json()
        assert len(data) > 0
        # Check if the first request is pending
>       assert data[0]["status"] == "PENDING"
E       KeyError: 0

tests/routes/test_private_group_join_request_response.py:132: KeyError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:21,060 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:21,060 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:21,060 INFO sqlalchemy.engine.Engine [cached since 11.2s ago] {'number_1': 1234567}
2024-12-18 23:01:21,327 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:21,332 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:21,332 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:21,332 INFO sqlalchemy.engine.Engine [cached since 11.47s ago] {'number_1': 1234567}
2024-12-18 23:01:21,334 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:21,334 INFO sqlalchemy.engine.Engine [cached since 11.17s ago] {'name': 'TestGroup-MmwpFx', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('c10bda97-7447-48b6-b097-94218a97562f'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:21,334 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:21,334 INFO sqlalchemy.engine.Engine [cached since 11.17s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('c10bda97-7447-48b6-b097-94218a97562f'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:21,334 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:21,335 INFO sqlalchemy.engine.Engine [cached since 11.17s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('c10bda97-7447-48b6-b097-94218a97562f')}
2024-12-18 23:01:21,335 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:21,343 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:21,343 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:21,343 INFO sqlalchemy.engine.Engine [cached since 11.17s ago] {'pk_1': UUID('c10bda97-7447-48b6-b097-94218a97562f')}
2024-12-18 23:01:21,344 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:21,344 INFO sqlalchemy.engine.Engine [cached since 11.17s ago] {'param_1': UUID('c10bda97-7447-48b6-b097-94218a97562f')}
2024-12-18 23:01:21,345 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:21,345 INFO sqlalchemy.engine.Engine [cached since 11.17s ago] {'param_1': UUID('c10bda97-7447-48b6-b097-94218a97562f')}
2024-12-18 23:01:21,347 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
2024-12-18 23:01:21,347 INFO sqlalchemy.engine.Engine [cached since 11.17s ago] {'param_1': UUID('c10bda97-7447-48b6-b097-94218a97562f')}
2024-12-18 23:01:21,348 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:21,351 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:21,351 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:21,352 INFO sqlalchemy.engine.Engine [cached since 11.49s ago] {'number_1': 1234567}
2024-12-18 23:01:21,620 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:21,623 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:21,623 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:21,623 INFO sqlalchemy.engine.Engine [cached since 11.17s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
2024-12-18 23:01:21,624 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:21,626 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:21,627 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:21,627 INFO sqlalchemy.engine.Engine [cached since 11.18s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
2024-12-18 23:01:21,628 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.2s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.47s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.17s ago] {'name': 'TestGroup-MmwpFx', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('c10bda97-7447-48b6-b097-94218a97562f'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.17s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('c10bda97-7447-48b6-b097-94218a97562f'), 'date': datetime.date(2024, 12, 18)}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.17s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('c10bda97-7447-48b6-b097-94218a97562f')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.17s ago] {'pk_1': UUID('c10bda97-7447-48b6-b097-94218a97562f')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.17s ago] {'param_1': UUID('c10bda97-7447-48b6-b097-94218a97562f')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.17s ago] {'param_1': UUID('c10bda97-7447-48b6-b097-94218a97562f')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.17s ago] {'param_1': UUID('c10bda97-7447-48b6-b097-94218a97562f')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.49s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.17s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.18s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_________________________ test_reject_request_success __________________________

    def test_reject_request_success() -> None:
        create_private_group(group_id, student_id)
    
        token_data = authenticate_user()
        token = token_data["access_token"]
        headers = {"Authorization": f"Bearer {token}"}
    
        # Create a join request
        client.post(f"/groups/{group_id}/join", headers=headers)
        # Get the request ID
        response = client.get(f"/groups/{group_id}/requests", headers=headers)
>       request_id = response.json()[0]["id"]
E       KeyError: 0

tests/routes/test_private_group_join_request_response.py:146: KeyError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:21,634 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:21,634 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:21,634 INFO sqlalchemy.engine.Engine [cached since 11.77s ago] {'number_1': 1234567}
2024-12-18 23:01:21,898 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:21,902 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:21,903 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:21,903 INFO sqlalchemy.engine.Engine [cached since 12.04s ago] {'number_1': 1234567}
2024-12-18 23:01:21,944 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:21,945 INFO sqlalchemy.engine.Engine [cached since 11.78s ago] {'name': 'TestGroup-UihgMh', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('b17327e4-6502-4912-a97d-8ab48f65eabb'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:21,945 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:21,945 INFO sqlalchemy.engine.Engine [cached since 11.78s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('b17327e4-6502-4912-a97d-8ab48f65eabb'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:21,946 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:21,946 INFO sqlalchemy.engine.Engine [cached since 11.78s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('b17327e4-6502-4912-a97d-8ab48f65eabb')}
2024-12-18 23:01:21,946 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:21,954 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:21,954 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:21,955 INFO sqlalchemy.engine.Engine [cached since 11.79s ago] {'pk_1': UUID('b17327e4-6502-4912-a97d-8ab48f65eabb')}
2024-12-18 23:01:21,956 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:21,956 INFO sqlalchemy.engine.Engine [cached since 11.78s ago] {'param_1': UUID('b17327e4-6502-4912-a97d-8ab48f65eabb')}
2024-12-18 23:01:21,957 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:21,957 INFO sqlalchemy.engine.Engine [cached since 11.78s ago] {'param_1': UUID('b17327e4-6502-4912-a97d-8ab48f65eabb')}
2024-12-18 23:01:21,959 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
2024-12-18 23:01:21,959 INFO sqlalchemy.engine.Engine [cached since 11.78s ago] {'param_1': UUID('b17327e4-6502-4912-a97d-8ab48f65eabb')}
2024-12-18 23:01:21,960 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:21,964 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:21,964 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:21,964 INFO sqlalchemy.engine.Engine [cached since 12.1s ago] {'number_1': 1234567}
2024-12-18 23:01:22,231 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:22,233 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:22,233 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:22,234 INFO sqlalchemy.engine.Engine [cached since 11.78s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
2024-12-18 23:01:22,234 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:22,236 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:22,237 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:22,237 INFO sqlalchemy.engine.Engine [cached since 11.79s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
2024-12-18 23:01:22,238 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.77s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.04s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.78s ago] {'name': 'TestGroup-UihgMh', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('b17327e4-6502-4912-a97d-8ab48f65eabb'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.78s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('b17327e4-6502-4912-a97d-8ab48f65eabb'), 'date': datetime.date(2024, 12, 18)}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.78s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('b17327e4-6502-4912-a97d-8ab48f65eabb')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.79s ago] {'pk_1': UUID('b17327e4-6502-4912-a97d-8ab48f65eabb')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.78s ago] {'param_1': UUID('b17327e4-6502-4912-a97d-8ab48f65eabb')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.78s ago] {'param_1': UUID('b17327e4-6502-4912-a97d-8ab48f65eabb')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.78s ago] {'param_1': UUID('b17327e4-6502-4912-a97d-8ab48f65eabb')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.1s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.78s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 11.79s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_____________________ test_reject_request_already_rejected _____________________

    def test_reject_request_already_rejected() -> None:
        create_private_group(group_id, student_id)
    
        token_data = authenticate_user()
        token = token_data["access_token"]
        headers = {"Authorization": f"Bearer {token}"}
    
        # Create a join request
        client.post(f"/groups/{group_id}/join", headers=headers)
        response = client.get(f"/groups/{group_id}/requests", headers=headers)
>       request_id = response.json()[0]["id"]
E       KeyError: 0

tests/routes/test_private_group_join_request_response.py:162: KeyError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:22,244 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:22,244 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:22,244 INFO sqlalchemy.engine.Engine [cached since 12.38s ago] {'number_1': 1234567}
2024-12-18 23:01:22,513 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:22,518 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:22,518 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:22,518 INFO sqlalchemy.engine.Engine [cached since 12.65s ago] {'number_1': 1234567}
2024-12-18 23:01:22,520 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:22,520 INFO sqlalchemy.engine.Engine [cached since 12.36s ago] {'name': 'TestGroup-tiOCrd', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('e312da43-94a2-426f-a0f1-947b6538f28f'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:22,521 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:22,521 INFO sqlalchemy.engine.Engine [cached since 12.36s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('e312da43-94a2-426f-a0f1-947b6538f28f'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:22,521 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:22,521 INFO sqlalchemy.engine.Engine [cached since 12.35s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('e312da43-94a2-426f-a0f1-947b6538f28f')}
2024-12-18 23:01:22,521 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:22,529 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:22,530 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:22,530 INFO sqlalchemy.engine.Engine [cached since 12.36s ago] {'pk_1': UUID('e312da43-94a2-426f-a0f1-947b6538f28f')}
2024-12-18 23:01:22,531 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:22,531 INFO sqlalchemy.engine.Engine [cached since 12.36s ago] {'param_1': UUID('e312da43-94a2-426f-a0f1-947b6538f28f')}
2024-12-18 23:01:22,532 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:22,532 INFO sqlalchemy.engine.Engine [cached since 12.36s ago] {'param_1': UUID('e312da43-94a2-426f-a0f1-947b6538f28f')}
2024-12-18 23:01:22,533 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
2024-12-18 23:01:22,534 INFO sqlalchemy.engine.Engine [cached since 12.35s ago] {'param_1': UUID('e312da43-94a2-426f-a0f1-947b6538f28f')}
2024-12-18 23:01:22,535 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:22,539 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:22,539 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:22,539 INFO sqlalchemy.engine.Engine [cached since 12.67s ago] {'number_1': 1234567}
2024-12-18 23:01:22,804 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:22,807 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:22,807 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:22,807 INFO sqlalchemy.engine.Engine [cached since 12.36s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
2024-12-18 23:01:22,808 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:22,810 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:22,810 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:22,810 INFO sqlalchemy.engine.Engine [cached since 12.36s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
2024-12-18 23:01:22,811 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.38s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.65s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.36s ago] {'name': 'TestGroup-tiOCrd', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('e312da43-94a2-426f-a0f1-947b6538f28f'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.36s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('e312da43-94a2-426f-a0f1-947b6538f28f'), 'date': datetime.date(2024, 12, 18)}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.35s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('e312da43-94a2-426f-a0f1-947b6538f28f')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.36s ago] {'pk_1': UUID('e312da43-94a2-426f-a0f1-947b6538f28f')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.36s ago] {'param_1': UUID('e312da43-94a2-426f-a0f1-947b6538f28f')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.36s ago] {'param_1': UUID('e312da43-94a2-426f-a0f1-947b6538f28f')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.35s ago] {'param_1': UUID('e312da43-94a2-426f-a0f1-947b6538f28f')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.67s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.36s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.36s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_________________________ test_approve_request_success _________________________

    def test_approve_request_success() -> None:
        create_student(student_id=student_id, email_par="ciao@example.com")
        create_student(student_id=student_id2, email_par="ciao2@example.com")
        create_private_group(group_id, student_id)
    
        token_data = authenticate_user()
        token = token_data["access_token"]
        headers = {"Authorization": f"Bearer {token}"}
    
        # Create a join request
        client.post(f"/groups/{group_id}/join", headers=headers)
    
        # Get the request ID
        response = client.get(f"/groups/{group_id}/requests", headers=headers)
>       request_id = response.json()[0]["id"]
E       KeyError: 0

tests/routes/test_private_group_join_request_response.py:188: KeyError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:22,816 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:22,816 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
2024-12-18 23:01:22,816 INFO sqlalchemy.engine.Engine [cached since 12.36s ago] {'id_1': UUID('4f6927ad-a5cf-4059-a84c-b1dfb8bf5369')}
2024-12-18 23:01:22,817 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:22,817 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:22,817 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
2024-12-18 23:01:22,817 INFO sqlalchemy.engine.Engine [cached since 12.36s ago] {'id_1': UUID('de838847-14ae-41d0-99af-9f6354ab2fb9')}
2024-12-18 23:01:22,818 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:22,820 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:22,820 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:22,820 INFO sqlalchemy.engine.Engine [cached since 12.96s ago] {'number_1': 1234567}
2024-12-18 23:01:23,084 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:23,089 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:23,089 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:23,089 INFO sqlalchemy.engine.Engine [cached since 13.22s ago] {'number_1': 1234567}
2024-12-18 23:01:23,091 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:23,091 INFO sqlalchemy.engine.Engine [cached since 12.93s ago] {'name': 'TestGroup-jXYGTw', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('4cdb0235-0edf-488d-a462-7a5a3f85fba0'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:23,092 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:23,092 INFO sqlalchemy.engine.Engine [cached since 12.93s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('4cdb0235-0edf-488d-a462-7a5a3f85fba0'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:23,093 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:23,093 INFO sqlalchemy.engine.Engine [cached since 12.93s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('4cdb0235-0edf-488d-a462-7a5a3f85fba0')}
2024-12-18 23:01:23,093 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:23,102 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:23,102 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:23,102 INFO sqlalchemy.engine.Engine [cached since 12.93s ago] {'pk_1': UUID('4cdb0235-0edf-488d-a462-7a5a3f85fba0')}
2024-12-18 23:01:23,104 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:23,104 INFO sqlalchemy.engine.Engine [cached since 12.93s ago] {'param_1': UUID('4cdb0235-0edf-488d-a462-7a5a3f85fba0')}
2024-12-18 23:01:23,105 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:23,105 INFO sqlalchemy.engine.Engine [cached since 12.93s ago] {'param_1': UUID('4cdb0235-0edf-488d-a462-7a5a3f85fba0')}
2024-12-18 23:01:23,106 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
2024-12-18 23:01:23,106 INFO sqlalchemy.engine.Engine [cached since 12.93s ago] {'param_1': UUID('4cdb0235-0edf-488d-a462-7a5a3f85fba0')}
2024-12-18 23:01:23,107 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:23,111 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:23,111 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:23,111 INFO sqlalchemy.engine.Engine [cached since 13.25s ago] {'number_1': 1234567}
2024-12-18 23:01:23,375 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:23,378 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:23,378 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:23,378 INFO sqlalchemy.engine.Engine [cached since 12.93s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
2024-12-18 23:01:23,379 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:23,381 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:23,381 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:23,381 INFO sqlalchemy.engine.Engine [cached since 12.93s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
2024-12-18 23:01:23,382 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.36s ago] {'id_1': UUID('4f6927ad-a5cf-4059-a84c-b1dfb8bf5369')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.36s ago] {'id_1': UUID('de838847-14ae-41d0-99af-9f6354ab2fb9')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.96s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.22s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.93s ago] {'name': 'TestGroup-jXYGTw', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('4cdb0235-0edf-488d-a462-7a5a3f85fba0'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.93s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('4cdb0235-0edf-488d-a462-7a5a3f85fba0'), 'date': datetime.date(2024, 12, 18)}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.93s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('4cdb0235-0edf-488d-a462-7a5a3f85fba0')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.93s ago] {'pk_1': UUID('4cdb0235-0edf-488d-a462-7a5a3f85fba0')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.93s ago] {'param_1': UUID('4cdb0235-0edf-488d-a462-7a5a3f85fba0')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.93s ago] {'param_1': UUID('4cdb0235-0edf-488d-a462-7a5a3f85fba0')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.93s ago] {'param_1': UUID('4cdb0235-0edf-488d-a462-7a5a3f85fba0')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.25s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.93s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.93s ago] {'id_1': UUID('2defc8b1-feb3-4fa2-a49f-acf17f3267e6')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
__________________________ test_unblock_user_success ___________________________

self = <sqlalchemy.engine.base.Connection object at 0x7f500a1a6990>
dialect = <sqlalchemy.dialects.postgresql.psycopg.PGDialect_psycopg object at 0x7f500db2f080>
context = <sqlalchemy.dialects.postgresql.psycopg.PGExecutionContext_psycopg object at 0x7f500a07d190>
statement = <sqlalchemy.dialects.postgresql.psycopg.PGCompiler_psycopg object at 0x7f500a07c080>
parameters = [{'group_id': UUID('c7348313-7c81-442c-973d-30a0d5898ee9'), 'student_id': UUID('d6dcf3b1-425a-4864-88d3-525decebef18')}]

    def _exec_single_context(
        self,
        dialect: Dialect,
        context: ExecutionContext,
        statement: Union[str, Compiled],
        parameters: Optional[_AnyMultiExecuteParams],
    ) -> CursorResult[Any]:
        """continue the _execute_context() method for a single DBAPI
        cursor.execute() or cursor.executemany() call.
    
        """
        if dialect.bind_typing is BindTyping.SETINPUTSIZES:
            generic_setinputsizes = context._prepare_set_input_sizes()
    
            if generic_setinputsizes:
                try:
                    dialect.do_set_input_sizes(
                        context.cursor, generic_setinputsizes, context
                    )
                except BaseException as e:
                    self._handle_dbapi_exception(
                        e, str(statement), parameters, None, context
                    )
    
        cursor, str_statement, parameters = (
            context.cursor,
            context.statement,
            context.parameters,
        )
    
        effective_parameters: Optional[_AnyExecuteParams]
    
        if not context.executemany:
            effective_parameters = parameters[0]
        else:
            effective_parameters = parameters
    
        if self._has_events or self.engine._has_events:
            for fn in self.dispatch.before_cursor_execute:
                str_statement, effective_parameters = fn(
                    self,
                    cursor,
                    str_statement,
                    effective_parameters,
                    context,
                    context.executemany,
                )
    
        if self._echo:
            self._log_info(str_statement)
    
            stats = context._get_cache_stats()
    
            if not self.engine.hide_parameters:
                self._log_info(
                    "[%s] %r",
                    stats,
                    sql_util._repr_params(
                        effective_parameters,
                        batches=10,
                        ismulti=context.executemany,
                    ),
                )
            else:
                self._log_info(
                    "[%s] [SQL parameters hidden due to hide_parameters=True]",
                    stats,
                )
    
        evt_handled: bool = False
        try:
            if context.execute_style is ExecuteStyle.EXECUTEMANY:
                effective_parameters = cast(
                    "_CoreMultiExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_executemany:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_executemany(
                        cursor,
                        str_statement,
                        effective_parameters,
                        context,
                    )
            elif not effective_parameters and context.no_parameters:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute_no_params:
                        if fn(cursor, str_statement, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_execute_no_params(
                        cursor, str_statement, context
                    )
            else:
                effective_parameters = cast(
                    "_CoreSingleExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
>                   self.dialect.do_execute(
                        cursor, str_statement, effective_parameters, context
                    )

.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.12/site-packages/sqlalchemy/engine/default.py:941: in do_execute
    cursor.execute(statement, parameters)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <psycopg.Cursor [closed] [IDLE] (host=localhost user=postgres database=unigate) at 0x7f500a055cd0>
query = 'INSERT INTO blocks (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)'
params = {'group_id': UUID('c7348313-7c81-442c-973d-30a0d5898ee9'), 'student_id': UUID('d6dcf3b1-425a-4864-88d3-525decebef18')}

    def execute(
        self,
        query: Query,
        params: Params | None = None,
        *,
        prepare: bool | None = None,
        binary: bool | None = None,
    ) -> Self:
        """
        Execute a query or command to the database.
        """
        try:
            with self._conn.lock:
                self._conn.wait(
                    self._execute_gen(query, params, prepare=prepare, binary=binary)
                )
        except e._NO_TRACEBACK as ex:
>           raise ex.with_traceback(None)
E           psycopg.errors.ForeignKeyViolation: insert or update on table "blocks" violates foreign key constraint "blocks_student_id_fkey"
E           DETAIL:  Key (student_id)=(d6dcf3b1-425a-4864-88d3-525decebef18) is not present in table "students".

.venv/lib/python3.12/site-packages/psycopg/cursor.py:97: ForeignKeyViolation

The above exception was the direct cause of the following exception:

    def test_unblock_user_success():
        group_response = create_group()
        created_group_id = group_response["id"]
    
>       create_blocked_student(test_student_id, created_group_id)

tests/routes/test_unblock_student.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/routes/test_unblock_student.py:59: in create_blocked_student
    connection.execute(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1418: in execute
    return meth(
.venv/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:515: in _execute_on_connection
    return connection._execute_clauseelement(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1640: in _execute_clauseelement
    ret = self._execute_context(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2355: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/default.py:941: in do_execute
    cursor.execute(statement, parameters)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <psycopg.Cursor [closed] [IDLE] (host=localhost user=postgres database=unigate) at 0x7f500a055cd0>
query = 'INSERT INTO blocks (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)'
params = {'group_id': UUID('c7348313-7c81-442c-973d-30a0d5898ee9'), 'student_id': UUID('d6dcf3b1-425a-4864-88d3-525decebef18')}

    def execute(
        self,
        query: Query,
        params: Params | None = None,
        *,
        prepare: bool | None = None,
        binary: bool | None = None,
    ) -> Self:
        """
        Execute a query or command to the database.
        """
        try:
            with self._conn.lock:
                self._conn.wait(
                    self._execute_gen(query, params, prepare=prepare, binary=binary)
                )
        except e._NO_TRACEBACK as ex:
>           raise ex.with_traceback(None)
E           sqlalchemy.exc.IntegrityError: (psycopg.errors.ForeignKeyViolation) insert or update on table "blocks" violates foreign key constraint "blocks_student_id_fkey"
E           DETAIL:  Key (student_id)=(d6dcf3b1-425a-4864-88d3-525decebef18) is not present in table "students".
E           [SQL: INSERT INTO blocks (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)]
E           [parameters: {'student_id': UUID('d6dcf3b1-425a-4864-88d3-525decebef18'), 'group_id': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}]
E           (Background on this error at: https://sqlalche.me/e/20/gkpj)

.venv/lib/python3.12/site-packages/psycopg/cursor.py:97: IntegrityError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:01:23,388 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:23,389 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:23,389 INFO sqlalchemy.engine.Engine [cached since 13.52s ago] {'number_1': 1234567}
2024-12-18 23:01:23,657 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:23,661 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:23,661 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:01:23,661 INFO sqlalchemy.engine.Engine [cached since 13.8s ago] {'number_1': 1234567}
2024-12-18 23:01:23,663 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:01:23,663 INFO sqlalchemy.engine.Engine [cached since 13.5s ago] {'name': 'TestGroup-71fb47', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PUBLIC', 'id': UUID('c7348313-7c81-442c-973d-30a0d5898ee9'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
2024-12-18 23:01:23,664 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:01:23,664 INFO sqlalchemy.engine.Engine [cached since 13.5s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('c7348313-7c81-442c-973d-30a0d5898ee9'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:01:23,664 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:23,664 INFO sqlalchemy.engine.Engine [cached since 13.5s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}
2024-12-18 23:01:23,665 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:01:23,673 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:23,673 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:01:23,673 INFO sqlalchemy.engine.Engine [cached since 13.5s ago] {'pk_1': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}
2024-12-18 23:01:23,675 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:01:23,675 INFO sqlalchemy.engine.Engine [cached since 13.5s ago] {'param_1': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}
2024-12-18 23:01:23,676 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:01:23,676 INFO sqlalchemy.engine.Engine [cached since 13.5s ago] {'param_1': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}
2024-12-18 23:01:23,677 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
2024-12-18 23:01:23,677 INFO sqlalchemy.engine.Engine [cached since 13.5s ago] {'param_1': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}
2024-12-18 23:01:23,678 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:01:23,680 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:01:23,681 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:01:23,681 INFO sqlalchemy.engine.Engine [generated in 0.00018s] {'id_1': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}
2024-12-18 23:01:23,683 INFO sqlalchemy.engine.Engine INSERT INTO blocks (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:01:23,683 INFO sqlalchemy.engine.Engine [generated in 0.00025s] {'student_id': UUID('d6dcf3b1-425a-4864-88d3-525decebef18'), 'group_id': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}
2024-12-18 23:01:23,684 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.52s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.8s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.5s ago] {'name': 'TestGroup-71fb47', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PUBLIC', 'id': UUID('c7348313-7c81-442c-973d-30a0d5898ee9'), 'creator_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.5s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('c7348313-7c81-442c-973d-30a0d5898ee9'), 'date': datetime.date(2024, 12, 18)}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.5s ago] {'student_id': UUID('560b7fd3-164d-46a5-953e-dae141c96531'), 'group_id': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.5s ago] {'pk_1': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.5s ago] {'param_1': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.5s ago] {'param_1': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.5s ago] {'param_1': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00018s] {'id_1': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO blocks (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00025s] {'student_id': UUID('d6dcf3b1-425a-4864-88d3-525decebef18'), 'group_id': UUID('c7348313-7c81-442c-973d-30a0d5898ee9')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
=============================== warnings summary ===============================
tests/routes/test_block_user.py::test_get_group_info
  /home/lorenzo/Scrivania/CAPSTONE/unigate/backend/.venv/lib/python3.12/site-packages/_pytest/python.py:163: PytestReturnNotNoneWarning: Expected None, but tests/routes/test_block_user.py::test_get_group_info returned '9505fbdd-8d71-4f6b-8afc-f9873133402d', which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?
    warnings.warn(

tests/routes/test_block_user.py::test_student_request_join_group
  /home/lorenzo/Scrivania/CAPSTONE/unigate/backend/.venv/lib/python3.12/site-packages/_pytest/python.py:163: PytestReturnNotNoneWarning: Expected None, but tests/routes/test_block_user.py::test_student_request_join_group returned '7bc29ead-ee0a-46b5-82b2-c7d014bf34b2', which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/routes/test_block_student.py::test_block_user_success - Assertio...
FAILED tests/routes/test_join_private_groups.py::test_join_private_group_success
FAILED tests/routes/test_join_public_group.py::test_student_non_existent - sq...
FAILED tests/routes/test_join_public_group.py::test_group_non_existant - sqla...
FAILED tests/routes/test_join_public_group.py::test_valid_join - assert 405 =...
FAILED tests/routes/test_join_public_group.py::test_double_enrollment - asser...
FAILED tests/routes/test_leave_group.py::test_group_non_existant - assert 404...
FAILED tests/routes/test_leave_group.py::test_student_non_existent - assert 4...
FAILED tests/routes/test_leave_group.py::test_valid_leave - KeyError: 'member...
FAILED tests/routes/test_leave_group.py::test_valid_leave_no_members - assert...
FAILED tests/routes/test_login.py::test_login_invalid_username - ValueError: ...
FAILED tests/routes/test_my_groups.py::test_my_groups_empty - AssertionError:...
FAILED tests/routes/test_my_groups.py::test_my_groups - KeyError: 'id'
FAILED tests/routes/test_private_group_join_request_response.py::test_create_request_success
FAILED tests/routes/test_private_group_join_request_response.py::test_create_request_already_exists
FAILED tests/routes/test_private_group_join_request_response.py::test_get_all_requests_for_group
FAILED tests/routes/test_private_group_join_request_response.py::test_reject_request_success
FAILED tests/routes/test_private_group_join_request_response.py::test_reject_request_already_rejected
FAILED tests/routes/test_private_group_join_request_response.py::test_approve_request_success
FAILED tests/routes/test_unblock_student.py::test_unblock_user_success - sqla...
================== 20 failed, 22 passed, 2 warnings in 14.87s ==================
