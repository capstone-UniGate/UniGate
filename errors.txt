DO
DO
DO
2024-12-18 23:37:52,021 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2024-12-18 23:37:52,021 INFO sqlalchemy.engine.Engine [raw sql] {}
2024-12-18 23:37:52,023 INFO sqlalchemy.engine.Engine select current_schema()
2024-12-18 23:37:52,024 INFO sqlalchemy.engine.Engine [raw sql] {}
2024-12-18 23:37:52,026 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2024-12-18 23:37:52,026 INFO sqlalchemy.engine.Engine [raw sql] {}
2024-12-18 23:37:52,028 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,029 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:37:52,029 INFO sqlalchemy.engine.Engine [generated in 0.00012s] {'number': 4891185, 'email': 's4891185@studenti.unige.it', 'name': 'Fabio', 'surname': 'Fontana', 'id': UUID('b7a0ba08-8e70-4373-b87a-277200488886')}
2024-12-18 23:37:52,030 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,031 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,032 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,032 INFO sqlalchemy.engine.Engine [generated in 0.00009s] {'pk_1': UUID('b7a0ba08-8e70-4373-b87a-277200488886')}
2024-12-18 23:37:52,034 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:37:52,034 INFO sqlalchemy.engine.Engine [generated in 0.00015s] {'name': 'Test Public Group 4891185', 'description': 'This is a test group', 'category': 'Test', 'type': 'PUBLIC', 'id': UUID('9e769521-84a8-4501-8705-dcbdafbcac27'), 'creator_id': UUID('b7a0ba08-8e70-4373-b87a-277200488886')}
2024-12-18 23:37:52,035 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,036 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,036 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:37:52,037 INFO sqlalchemy.engine.Engine [generated in 0.00009s] {'pk_1': UUID('9e769521-84a8-4501-8705-dcbdafbcac27')}
2024-12-18 23:37:52,040 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:37:52,040 INFO sqlalchemy.engine.Engine [generated in 0.00025s] {'param_1': UUID('9e769521-84a8-4501-8705-dcbdafbcac27')}
2024-12-18 23:37:52,043 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,043 INFO sqlalchemy.engine.Engine [generated in 0.00020s] {'pk_1': UUID('b7a0ba08-8e70-4373-b87a-277200488886')}
2024-12-18 23:37:52,045 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:37:52,045 INFO sqlalchemy.engine.Engine [generated in 0.00014s] {'student_id': UUID('b7a0ba08-8e70-4373-b87a-277200488886'), 'group_id': UUID('9e769521-84a8-4501-8705-dcbdafbcac27'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:37:52,046 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:37:52,046 INFO sqlalchemy.engine.Engine [generated in 0.00010s] {'param_1': UUID('9e769521-84a8-4501-8705-dcbdafbcac27')}
2024-12-18 23:37:52,048 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:37:52,048 INFO sqlalchemy.engine.Engine [generated in 0.00009s] {'student_id': UUID('b7a0ba08-8e70-4373-b87a-277200488886'), 'group_id': UUID('9e769521-84a8-4501-8705-dcbdafbcac27')}
2024-12-18 23:37:52,049 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,049 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,050 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,050 INFO sqlalchemy.engine.Engine [generated in 0.00013s] {'pk_1': UUID('b7a0ba08-8e70-4373-b87a-277200488886')}
2024-12-18 23:37:52,051 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:37:52,051 INFO sqlalchemy.engine.Engine [cached since 0.01718s ago] {'name': 'Test Private Group 4891185', 'description': 'This is a test group', 'category': 'Test', 'type': 'PRIVATE', 'id': UUID('26b490d2-30c1-4f00-bd44-517f95039fc2'), 'creator_id': UUID('b7a0ba08-8e70-4373-b87a-277200488886')}
2024-12-18 23:37:52,052 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,052 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,053 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:37:52,053 INFO sqlalchemy.engine.Engine [cached since 0.0162s ago] {'pk_1': UUID('26b490d2-30c1-4f00-bd44-517f95039fc2')}
2024-12-18 23:37:52,053 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:37:52,053 INFO sqlalchemy.engine.Engine [cached since 0.01381s ago] {'param_1': UUID('26b490d2-30c1-4f00-bd44-517f95039fc2')}
2024-12-18 23:37:52,055 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,055 INFO sqlalchemy.engine.Engine [cached since 0.0117s ago] {'pk_1': UUID('b7a0ba08-8e70-4373-b87a-277200488886')}
2024-12-18 23:37:52,056 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:37:52,056 INFO sqlalchemy.engine.Engine [cached since 0.01118s ago] {'student_id': UUID('b7a0ba08-8e70-4373-b87a-277200488886'), 'group_id': UUID('26b490d2-30c1-4f00-bd44-517f95039fc2'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:37:52,057 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:37:52,057 INFO sqlalchemy.engine.Engine [cached since 0.01058s ago] {'param_1': UUID('26b490d2-30c1-4f00-bd44-517f95039fc2')}
2024-12-18 23:37:52,058 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:37:52,058 INFO sqlalchemy.engine.Engine [cached since 0.01006s ago] {'student_id': UUID('b7a0ba08-8e70-4373-b87a-277200488886'), 'group_id': UUID('26b490d2-30c1-4f00-bd44-517f95039fc2')}
2024-12-18 23:37:52,059 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,060 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,060 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:37:52,060 INFO sqlalchemy.engine.Engine [cached since 0.03105s ago] {'number': 4989646, 'email': 's4989646@studenti.unige.it', 'name': 'Lorenzo', 'surname': 'Foschi', 'id': UUID('40b0c32a-f87a-473d-aed0-855a0ce71681')}
2024-12-18 23:37:52,061 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,062 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,062 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,062 INFO sqlalchemy.engine.Engine [cached since 0.03001s ago] {'pk_1': UUID('40b0c32a-f87a-473d-aed0-855a0ce71681')}
2024-12-18 23:37:52,063 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:37:52,063 INFO sqlalchemy.engine.Engine [cached since 0.0287s ago] {'name': 'Test Public Group 4989646', 'description': 'This is a test group', 'category': 'Test', 'type': 'PUBLIC', 'id': UUID('70458dcf-d61d-4cf9-9b06-ad8c01d50b8c'), 'creator_id': UUID('40b0c32a-f87a-473d-aed0-855a0ce71681')}
2024-12-18 23:37:52,063 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,064 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,064 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:37:52,064 INFO sqlalchemy.engine.Engine [cached since 0.02757s ago] {'pk_1': UUID('70458dcf-d61d-4cf9-9b06-ad8c01d50b8c')}
2024-12-18 23:37:52,065 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:37:52,065 INFO sqlalchemy.engine.Engine [cached since 0.02535s ago] {'param_1': UUID('70458dcf-d61d-4cf9-9b06-ad8c01d50b8c')}
2024-12-18 23:37:52,066 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,066 INFO sqlalchemy.engine.Engine [cached since 0.02287s ago] {'pk_1': UUID('40b0c32a-f87a-473d-aed0-855a0ce71681')}
2024-12-18 23:37:52,067 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:37:52,067 INFO sqlalchemy.engine.Engine [cached since 0.02189s ago] {'student_id': UUID('40b0c32a-f87a-473d-aed0-855a0ce71681'), 'group_id': UUID('70458dcf-d61d-4cf9-9b06-ad8c01d50b8c'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:37:52,067 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:37:52,067 INFO sqlalchemy.engine.Engine [cached since 0.02112s ago] {'param_1': UUID('70458dcf-d61d-4cf9-9b06-ad8c01d50b8c')}
2024-12-18 23:37:52,068 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:37:52,068 INFO sqlalchemy.engine.Engine [cached since 0.02054s ago] {'student_id': UUID('40b0c32a-f87a-473d-aed0-855a0ce71681'), 'group_id': UUID('70458dcf-d61d-4cf9-9b06-ad8c01d50b8c')}
2024-12-18 23:37:52,069 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,070 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,070 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,070 INFO sqlalchemy.engine.Engine [cached since 0.02005s ago] {'pk_1': UUID('40b0c32a-f87a-473d-aed0-855a0ce71681')}
2024-12-18 23:37:52,071 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:37:52,071 INFO sqlalchemy.engine.Engine [cached since 0.03693s ago] {'name': 'Test Private Group 4989646', 'description': 'This is a test group', 'category': 'Test', 'type': 'PRIVATE', 'id': UUID('a208751e-e68e-49e8-986a-e2a58c077f70'), 'creator_id': UUID('40b0c32a-f87a-473d-aed0-855a0ce71681')}
2024-12-18 23:37:52,072 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,073 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,073 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:37:52,073 INFO sqlalchemy.engine.Engine [cached since 0.03658s ago] {'pk_1': UUID('a208751e-e68e-49e8-986a-e2a58c077f70')}
2024-12-18 23:37:52,074 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:37:52,074 INFO sqlalchemy.engine.Engine [cached since 0.03453s ago] {'param_1': UUID('a208751e-e68e-49e8-986a-e2a58c077f70')}
2024-12-18 23:37:52,076 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,076 INFO sqlalchemy.engine.Engine [cached since 0.03232s ago] {'pk_1': UUID('40b0c32a-f87a-473d-aed0-855a0ce71681')}
2024-12-18 23:37:52,076 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:37:52,076 INFO sqlalchemy.engine.Engine [cached since 0.03141s ago] {'student_id': UUID('40b0c32a-f87a-473d-aed0-855a0ce71681'), 'group_id': UUID('a208751e-e68e-49e8-986a-e2a58c077f70'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:37:52,077 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:37:52,077 INFO sqlalchemy.engine.Engine [cached since 0.03071s ago] {'param_1': UUID('a208751e-e68e-49e8-986a-e2a58c077f70')}
2024-12-18 23:37:52,078 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:37:52,078 INFO sqlalchemy.engine.Engine [cached since 0.03033s ago] {'student_id': UUID('40b0c32a-f87a-473d-aed0-855a0ce71681'), 'group_id': UUID('a208751e-e68e-49e8-986a-e2a58c077f70')}
2024-12-18 23:37:52,079 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,080 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,080 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:37:52,080 INFO sqlalchemy.engine.Engine [cached since 0.05096s ago] {'number': 5806782, 'email': 's5806782@studenti.unige.it', 'name': 'Mimmo', 'surname': 'Torabi', 'id': UUID('2c0a71e6-c3de-461a-a41b-f9c6e55d9d2b')}
2024-12-18 23:37:52,080 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,081 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,081 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,081 INFO sqlalchemy.engine.Engine [cached since 0.04951s ago] {'pk_1': UUID('2c0a71e6-c3de-461a-a41b-f9c6e55d9d2b')}
2024-12-18 23:37:52,082 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:37:52,082 INFO sqlalchemy.engine.Engine [cached since 0.04808s ago] {'name': 'Test Public Group 5806782', 'description': 'This is a test group', 'category': 'Test', 'type': 'PUBLIC', 'id': UUID('3dbd4cbd-cf86-4ef6-bfed-3775b4231746'), 'creator_id': UUID('2c0a71e6-c3de-461a-a41b-f9c6e55d9d2b')}
2024-12-18 23:37:52,082 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,083 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,083 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:37:52,083 INFO sqlalchemy.engine.Engine [cached since 0.04694s ago] {'pk_1': UUID('3dbd4cbd-cf86-4ef6-bfed-3775b4231746')}
2024-12-18 23:37:52,084 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:37:52,084 INFO sqlalchemy.engine.Engine [cached since 0.04455s ago] {'param_1': UUID('3dbd4cbd-cf86-4ef6-bfed-3775b4231746')}
2024-12-18 23:37:52,085 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,085 INFO sqlalchemy.engine.Engine [cached since 0.04196s ago] {'pk_1': UUID('2c0a71e6-c3de-461a-a41b-f9c6e55d9d2b')}
2024-12-18 23:37:52,086 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:37:52,086 INFO sqlalchemy.engine.Engine [cached since 0.04113s ago] {'student_id': UUID('2c0a71e6-c3de-461a-a41b-f9c6e55d9d2b'), 'group_id': UUID('3dbd4cbd-cf86-4ef6-bfed-3775b4231746'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:37:52,087 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:37:52,087 INFO sqlalchemy.engine.Engine [cached since 0.04042s ago] {'param_1': UUID('3dbd4cbd-cf86-4ef6-bfed-3775b4231746')}
2024-12-18 23:37:52,088 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:37:52,088 INFO sqlalchemy.engine.Engine [cached since 0.04016s ago] {'student_id': UUID('2c0a71e6-c3de-461a-a41b-f9c6e55d9d2b'), 'group_id': UUID('3dbd4cbd-cf86-4ef6-bfed-3775b4231746')}
2024-12-18 23:37:52,089 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,091 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,091 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,091 INFO sqlalchemy.engine.Engine [cached since 0.04116s ago] {'pk_1': UUID('2c0a71e6-c3de-461a-a41b-f9c6e55d9d2b')}
2024-12-18 23:37:52,092 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:37:52,092 INFO sqlalchemy.engine.Engine [cached since 0.05826s ago] {'name': 'Test Private Group 5806782', 'description': 'This is a test group', 'category': 'Test', 'type': 'PRIVATE', 'id': UUID('c1dd937a-d949-46de-a384-cbbf520f5b45'), 'creator_id': UUID('2c0a71e6-c3de-461a-a41b-f9c6e55d9d2b')}
2024-12-18 23:37:52,093 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,094 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,094 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:37:52,094 INFO sqlalchemy.engine.Engine [cached since 0.05741s ago] {'pk_1': UUID('c1dd937a-d949-46de-a384-cbbf520f5b45')}
2024-12-18 23:37:52,095 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:37:52,095 INFO sqlalchemy.engine.Engine [cached since 0.05535s ago] {'param_1': UUID('c1dd937a-d949-46de-a384-cbbf520f5b45')}
2024-12-18 23:37:52,096 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,096 INFO sqlalchemy.engine.Engine [cached since 0.05293s ago] {'pk_1': UUID('2c0a71e6-c3de-461a-a41b-f9c6e55d9d2b')}
2024-12-18 23:37:52,098 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:37:52,098 INFO sqlalchemy.engine.Engine [cached since 0.05329s ago] {'student_id': UUID('2c0a71e6-c3de-461a-a41b-f9c6e55d9d2b'), 'group_id': UUID('c1dd937a-d949-46de-a384-cbbf520f5b45'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:37:52,099 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:37:52,099 INFO sqlalchemy.engine.Engine [cached since 0.05294s ago] {'param_1': UUID('c1dd937a-d949-46de-a384-cbbf520f5b45')}
2024-12-18 23:37:52,100 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:37:52,100 INFO sqlalchemy.engine.Engine [cached since 0.05244s ago] {'student_id': UUID('2c0a71e6-c3de-461a-a41b-f9c6e55d9d2b'), 'group_id': UUID('c1dd937a-d949-46de-a384-cbbf520f5b45')}
2024-12-18 23:37:52,101 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,102 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,102 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:37:52,102 INFO sqlalchemy.engine.Engine [cached since 0.07324s ago] {'number': 1234567, 'email': 's1234567@studenti.unige.it', 'name': 'Test Name', 'surname': 'Test Surname', 'id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
2024-12-18 23:37:52,103 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,103 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,104 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,104 INFO sqlalchemy.engine.Engine [cached since 0.07187s ago] {'pk_1': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
2024-12-18 23:37:52,105 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:37:52,105 INFO sqlalchemy.engine.Engine [cached since 0.07067s ago] {'name': 'Test Public Group 1234567', 'description': 'This is a test group', 'category': 'Test', 'type': 'PUBLIC', 'id': UUID('90697a18-c78c-4e77-8266-28fdba4a7942'), 'creator_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
2024-12-18 23:37:52,105 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,106 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,106 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:37:52,106 INFO sqlalchemy.engine.Engine [cached since 0.07003s ago] {'pk_1': UUID('90697a18-c78c-4e77-8266-28fdba4a7942')}
2024-12-18 23:37:52,107 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:37:52,107 INFO sqlalchemy.engine.Engine [cached since 0.06786s ago] {'param_1': UUID('90697a18-c78c-4e77-8266-28fdba4a7942')}
2024-12-18 23:37:52,109 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,109 INFO sqlalchemy.engine.Engine [cached since 0.06556s ago] {'pk_1': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
2024-12-18 23:37:52,109 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:37:52,109 INFO sqlalchemy.engine.Engine [cached since 0.06456s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('90697a18-c78c-4e77-8266-28fdba4a7942'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:37:52,110 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:37:52,110 INFO sqlalchemy.engine.Engine [cached since 0.06377s ago] {'param_1': UUID('90697a18-c78c-4e77-8266-28fdba4a7942')}
2024-12-18 23:37:52,111 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:37:52,111 INFO sqlalchemy.engine.Engine [cached since 0.06317s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('90697a18-c78c-4e77-8266-28fdba4a7942')}
2024-12-18 23:37:52,111 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,112 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,112 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,112 INFO sqlalchemy.engine.Engine [cached since 0.06259s ago] {'pk_1': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
2024-12-18 23:37:52,113 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:37:52,113 INFO sqlalchemy.engine.Engine [cached since 0.07927s ago] {'name': 'Test Private Group 1234567', 'description': 'This is a test group', 'category': 'Test', 'type': 'PRIVATE', 'id': UUID('16207496-9127-4f38-82b9-3573a96396c2'), 'creator_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
2024-12-18 23:37:52,114 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:52,114 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:52,114 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:37:52,115 INFO sqlalchemy.engine.Engine [cached since 0.07811s ago] {'pk_1': UUID('16207496-9127-4f38-82b9-3573a96396c2')}
2024-12-18 23:37:52,115 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:37:52,115 INFO sqlalchemy.engine.Engine [cached since 0.07563s ago] {'param_1': UUID('16207496-9127-4f38-82b9-3573a96396c2')}
2024-12-18 23:37:52,116 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(pk_1)s::UUID
2024-12-18 23:37:52,116 INFO sqlalchemy.engine.Engine [cached since 0.07294s ago] {'pk_1': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
2024-12-18 23:37:52,117 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:37:52,117 INFO sqlalchemy.engine.Engine [cached since 0.0718s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('16207496-9127-4f38-82b9-3573a96396c2'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:37:52,117 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:37:52,117 INFO sqlalchemy.engine.Engine [cached since 0.07098s ago] {'param_1': UUID('16207496-9127-4f38-82b9-3573a96396c2')}
2024-12-18 23:37:52,118 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:37:52,118 INFO sqlalchemy.engine.Engine [cached since 0.07043s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('16207496-9127-4f38-82b9-3573a96396c2')}
2024-12-18 23:37:52,119 INFO sqlalchemy.engine.Engine COMMIT
============================= test session starts ==============================
platform linux -- Python 3.12.7, pytest-8.3.4, pluggy-1.5.0
rootdir: /home/lorenzo/Scrivania/CAPSTONE/unigate/backend
configfile: pyproject.toml
plugins: anyio-4.7.0, Faker-33.1.0
collected 42 items

tests/routes/test_block_student.py F..                                   [  7%]
tests/routes/test_block_user.py ......                                   [ 21%]
tests/routes/test_create_group.py ...                                    [ 28%]
tests/routes/test_get_groups.py .                                        [ 30%]
tests/routes/test_group_page.py ..                                       [ 35%]
tests/routes/test_join_private_groups.py F                               [ 38%]
tests/routes/test_join_public_group.py FFFF                              [ 47%]
tests/routes/test_leave_group.py .FFF                                    [ 57%]
tests/routes/test_login.py .F....                                        [ 71%]
tests/routes/test_my_groups.py FF                                        [ 76%]
tests/routes/test_private_group_join_request_response.py .....FF         [ 92%]
tests/routes/test_unblock_student.py F..                                 [100%]

=================================== FAILURES ===================================
___________________________ test_block_user_success ____________________________

    def test_block_user_success():
        group_response = create_group()
        created_group_id = group_response["id"]
    
        token_data = authenticate_user()
        headers = {"Authorization": f"Bearer {token_data['access_token']}"}
    
        response = client.post(
            f"/groups/{created_group_id}/students/{test_student_id}/block",
            headers=headers,
        )
    
>       assert response.status_code == 200, f"Block failed: {response.json()}"
E       AssertionError: Block failed: {'detail': 'Student not found.'}
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/routes/test_block_student.py:58: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:37:53,225 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2024-12-18 23:37:53,225 INFO sqlalchemy.engine.Engine [raw sql] {}
2024-12-18 23:37:53,226 INFO sqlalchemy.engine.Engine select current_schema()
2024-12-18 23:37:53,226 INFO sqlalchemy.engine.Engine [raw sql] {}
2024-12-18 23:37:53,227 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2024-12-18 23:37:53,227 INFO sqlalchemy.engine.Engine [raw sql] {}
2024-12-18 23:37:53,228 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:53,240 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:37:53,240 INFO sqlalchemy.engine.Engine [generated in 0.00018s] {'number_1': 1234567}
2024-12-18 23:37:53,516 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:37:53,520 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:53,520 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:37:53,520 INFO sqlalchemy.engine.Engine [cached since 0.2804s ago] {'number_1': 1234567}
2024-12-18 23:37:53,525 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:37:53,525 INFO sqlalchemy.engine.Engine [generated in 0.00017s] {'name': 'TestGroup-a0726e', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PUBLIC', 'id': UUID('5520575c-41cb-44d9-811f-ebd666196188'), 'creator_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
2024-12-18 23:37:53,526 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:37:53,526 INFO sqlalchemy.engine.Engine [generated in 0.00013s] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('5520575c-41cb-44d9-811f-ebd666196188'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:37:53,527 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:37:53,527 INFO sqlalchemy.engine.Engine [generated in 0.00011s] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('5520575c-41cb-44d9-811f-ebd666196188')}
2024-12-18 23:37:53,528 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:37:53,536 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:53,538 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:37:53,538 INFO sqlalchemy.engine.Engine [generated in 0.00020s] {'pk_1': UUID('5520575c-41cb-44d9-811f-ebd666196188')}
2024-12-18 23:37:53,541 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:37:53,541 INFO sqlalchemy.engine.Engine [generated in 0.00014s] {'param_1': UUID('5520575c-41cb-44d9-811f-ebd666196188')}
2024-12-18 23:37:53,546 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:37:53,546 INFO sqlalchemy.engine.Engine [generated in 0.00014s] {'param_1': UUID('5520575c-41cb-44d9-811f-ebd666196188')}
2024-12-18 23:37:53,548 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
2024-12-18 23:37:53,548 INFO sqlalchemy.engine.Engine [generated in 0.00021s] {'param_1': UUID('5520575c-41cb-44d9-811f-ebd666196188')}
2024-12-18 23:37:53,550 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:37:53,553 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:53,553 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:37:53,553 INFO sqlalchemy.engine.Engine [cached since 0.3135s ago] {'number_1': 1234567}
2024-12-18 23:37:53,820 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:37:53,824 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:37:53,825 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:37:53,825 INFO sqlalchemy.engine.Engine [generated in 0.00023s] {'id_1': UUID('5520575c-41cb-44d9-811f-ebd666196188')}
2024-12-18 23:37:53,827 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
2024-12-18 23:37:53,827 INFO sqlalchemy.engine.Engine [generated in 0.00014s] {'id_1': UUID('d6dcf3b1-425a-4864-88d3-525decebef18')}
2024-12-18 23:37:53,828 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:1846 select pg_catalog.version()
INFO     sqlalchemy.engine.Engine:base.py:1846 [raw sql] {}
INFO     sqlalchemy.engine.Engine:base.py:1846 select current_schema()
INFO     sqlalchemy.engine.Engine:base.py:1846 [raw sql] {}
INFO     sqlalchemy.engine.Engine:base.py:1846 show standard_conforming_strings
INFO     sqlalchemy.engine.Engine:base.py:1846 [raw sql] {}
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00018s] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 0.2804s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00017s] {'name': 'TestGroup-a0726e', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PUBLIC', 'id': UUID('5520575c-41cb-44d9-811f-ebd666196188'), 'creator_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00013s] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('5520575c-41cb-44d9-811f-ebd666196188'), 'date': datetime.date(2024, 12, 18)}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00011s] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('5520575c-41cb-44d9-811f-ebd666196188')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00020s] {'pk_1': UUID('5520575c-41cb-44d9-811f-ebd666196188')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00014s] {'param_1': UUID('5520575c-41cb-44d9-811f-ebd666196188')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00014s] {'param_1': UUID('5520575c-41cb-44d9-811f-ebd666196188')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00021s] {'param_1': UUID('5520575c-41cb-44d9-811f-ebd666196188')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 0.3135s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00023s] {'id_1': UUID('5520575c-41cb-44d9-811f-ebd666196188')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00014s] {'id_1': UUID('d6dcf3b1-425a-4864-88d3-525decebef18')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_______________________ test_join_private_group_success ________________________

    def test_join_private_group_success() -> None:
        creator_id = "508fc8f8-8e52-4adb-aa02-e9c9c41a0b19"
        group_id = "12345678-1234-5678-1234-567812345679"
        user_id = "b94e5917-ddbf-4fef-969d-fb67f78d0bd7"
    
        create_student(creator_id, "teststudenta1@example.com")
        create_private_group(group_id, creator_id)
        create_student(user_id, "teststudenta2@example.com")
    
        # User joins the private group
        response = client.post(
                f"/groups/{group_id}/join",
                params={"student_id": user_id},  # If needed, or pass in headers if token required
            )
>       assert response.status_code in [200, 400]
E       assert 404 in [200, 400]
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/routes/test_join_private_groups.py:78: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:38:01,713 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:01,713 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:38:01,713 INFO sqlalchemy.engine.Engine [cached since 7.006s ago] {'id_1': UUID('508fc8f8-8e52-4adb-aa02-e9c9c41a0b19'), 'param_1': 1}
2024-12-18 23:38:01,714 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:38:01,714 INFO sqlalchemy.engine.Engine [cached since 7.005s ago] {'number': 56684, 'email': 'teststudenta1@example.com', 'name': 'mirco', 'surname': 'alessandrini', 'id': UUID('508fc8f8-8e52-4adb-aa02-e9c9c41a0b19')}
2024-12-18 23:38:01,714 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:38:01,724 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:01,725 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:38:01,725 INFO sqlalchemy.engine.Engine [cached since 7.018s ago] {'id_1': UUID('b94e5917-ddbf-4fef-969d-fb67f78d0bd7'), 'param_1': 1}
2024-12-18 23:38:01,726 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:38:01,726 INFO sqlalchemy.engine.Engine [cached since 7.017s ago] {'number': 63932, 'email': 'teststudenta2@example.com', 'name': 'mirco', 'surname': 'alessandrini', 'id': UUID('b94e5917-ddbf-4fef-969d-fb67f78d0bd7')}
2024-12-18 23:38:01,726 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:38:01,729 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:01,729 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:38:01,729 INFO sqlalchemy.engine.Engine [cached since 7.905s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345679')}
2024-12-18 23:38:01,730 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.006s ago] {'id_1': UUID('508fc8f8-8e52-4adb-aa02-e9c9c41a0b19'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.005s ago] {'number': 56684, 'email': 'teststudenta1@example.com', 'name': 'mirco', 'surname': 'alessandrini', 'id': UUID('508fc8f8-8e52-4adb-aa02-e9c9c41a0b19')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.018s ago] {'id_1': UUID('b94e5917-ddbf-4fef-969d-fb67f78d0bd7'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.017s ago] {'number': 63932, 'email': 'teststudenta2@example.com', 'name': 'mirco', 'surname': 'alessandrini', 'id': UUID('b94e5917-ddbf-4fef-969d-fb67f78d0bd7')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.905s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345679')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
__________________________ test_student_non_existent ___________________________

self = <sqlalchemy.engine.base.Connection object at 0x7f12aaa5a1e0>
dialect = <sqlalchemy.dialects.postgresql.psycopg.PGDialect_psycopg object at 0x7f12aeb0c560>
context = <sqlalchemy.dialects.postgresql.psycopg.PGExecutionContext_psycopg object at 0x7f12aaa59640>
statement = <sqlalchemy.dialects.postgresql.psycopg.PGCompiler_psycopg object at 0x7f12aaa019a0>
parameters = [{'email': 'teststudent@example.com', 'id': UUID('12345678-1234-5678-1234-567812345678'), 'name': 'Test', 'number': 12345, ...}]

    def _exec_single_context(
        self,
        dialect: Dialect,
        context: ExecutionContext,
        statement: Union[str, Compiled],
        parameters: Optional[_AnyMultiExecuteParams],
    ) -> CursorResult[Any]:
        """continue the _execute_context() method for a single DBAPI
        cursor.execute() or cursor.executemany() call.
    
        """
        if dialect.bind_typing is BindTyping.SETINPUTSIZES:
            generic_setinputsizes = context._prepare_set_input_sizes()
    
            if generic_setinputsizes:
                try:
                    dialect.do_set_input_sizes(
                        context.cursor, generic_setinputsizes, context
                    )
                except BaseException as e:
                    self._handle_dbapi_exception(
                        e, str(statement), parameters, None, context
                    )
    
        cursor, str_statement, parameters = (
            context.cursor,
            context.statement,
            context.parameters,
        )
    
        effective_parameters: Optional[_AnyExecuteParams]
    
        if not context.executemany:
            effective_parameters = parameters[0]
        else:
            effective_parameters = parameters
    
        if self._has_events or self.engine._has_events:
            for fn in self.dispatch.before_cursor_execute:
                str_statement, effective_parameters = fn(
                    self,
                    cursor,
                    str_statement,
                    effective_parameters,
                    context,
                    context.executemany,
                )
    
        if self._echo:
            self._log_info(str_statement)
    
            stats = context._get_cache_stats()
    
            if not self.engine.hide_parameters:
                self._log_info(
                    "[%s] %r",
                    stats,
                    sql_util._repr_params(
                        effective_parameters,
                        batches=10,
                        ismulti=context.executemany,
                    ),
                )
            else:
                self._log_info(
                    "[%s] [SQL parameters hidden due to hide_parameters=True]",
                    stats,
                )
    
        evt_handled: bool = False
        try:
            if context.execute_style is ExecuteStyle.EXECUTEMANY:
                effective_parameters = cast(
                    "_CoreMultiExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_executemany:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_executemany(
                        cursor,
                        str_statement,
                        effective_parameters,
                        context,
                    )
            elif not effective_parameters and context.no_parameters:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute_no_params:
                        if fn(cursor, str_statement, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_execute_no_params(
                        cursor, str_statement, context
                    )
            else:
                effective_parameters = cast(
                    "_CoreSingleExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
>                   self.dialect.do_execute(
                        cursor, str_statement, effective_parameters, context
                    )

.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.12/site-packages/sqlalchemy/engine/default.py:941: in do_execute
    cursor.execute(statement, parameters)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <psycopg.Cursor [closed] [IDLE] (host=localhost user=postgres database=unigate) at 0x7f12aaa504d0>
query = 'INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)'
params = {'email': 'teststudent@example.com', 'id': UUID('12345678-1234-5678-1234-567812345678'), 'name': 'Test', 'number': 12345, ...}

    def execute(
        self,
        query: Query,
        params: Params | None = None,
        *,
        prepare: bool | None = None,
        binary: bool | None = None,
    ) -> Self:
        """
        Execute a query or command to the database.
        """
        try:
            with self._conn.lock:
                self._conn.wait(
                    self._execute_gen(query, params, prepare=prepare, binary=binary)
                )
        except e._NO_TRACEBACK as ex:
>           raise ex.with_traceback(None)
E           psycopg.errors.UniqueViolation: duplicate key value violates unique constraint "ix_students_email"
E           DETAIL:  Key (email)=(teststudent@example.com) already exists.

.venv/lib/python3.12/site-packages/psycopg/cursor.py:97: UniqueViolation

The above exception was the direct cause of the following exception:

    def test_student_non_existent() -> None:
        student_id = "12345678-1234-5678-1234-567812345678"
>       create_student(student_id=student_id, number=12345, mail="teststudent")

tests/routes/test_join_public_group.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/routes/test_join_public_group.py:45: in create_student
    session.commit()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2028: in commit
    trans.commit(_to_root=True)
<string>:2: in commit
    ???
.venv/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
<string>:2: in _prepare_impl
    ???
.venv/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4352: in flush
    self._flush(objects)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4487: in _flush
    with util.safe_reraise():
.venv/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py:146: in __exit__
    raise exc_value.with_traceback(exc_tb)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4448: in _flush
    flush_context.execute()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
.venv/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
.venv/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py:1048: in _emit_insert_statements
    result = connection.execute(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1418: in execute
    return meth(
.venv/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:515: in _execute_on_connection
    return connection._execute_clauseelement(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1640: in _execute_clauseelement
    ret = self._execute_context(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2355: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/default.py:941: in do_execute
    cursor.execute(statement, parameters)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <psycopg.Cursor [closed] [IDLE] (host=localhost user=postgres database=unigate) at 0x7f12aaa504d0>
query = 'INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)'
params = {'email': 'teststudent@example.com', 'id': UUID('12345678-1234-5678-1234-567812345678'), 'name': 'Test', 'number': 12345, ...}

    def execute(
        self,
        query: Query,
        params: Params | None = None,
        *,
        prepare: bool | None = None,
        binary: bool | None = None,
    ) -> Self:
        """
        Execute a query or command to the database.
        """
        try:
            with self._conn.lock:
                self._conn.wait(
                    self._execute_gen(query, params, prepare=prepare, binary=binary)
                )
        except e._NO_TRACEBACK as ex:
>           raise ex.with_traceback(None)
E           sqlalchemy.exc.IntegrityError: (psycopg.errors.UniqueViolation) duplicate key value violates unique constraint "ix_students_email"
E           DETAIL:  Key (email)=(teststudent@example.com) already exists.
E           [SQL: INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)]
E           [parameters: {'number': 12345, 'email': 'teststudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345678')}]
E           (Background on this error at: https://sqlalche.me/e/20/gkpj)

.venv/lib/python3.12/site-packages/psycopg/cursor.py:97: IntegrityError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:38:01,735 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:01,735 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:38:01,735 INFO sqlalchemy.engine.Engine [cached since 7.028s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345678'), 'param_1': 1}
2024-12-18 23:38:01,736 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:38:01,736 INFO sqlalchemy.engine.Engine [cached since 7.028s ago] {'number': 12345, 'email': 'teststudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345678')}
2024-12-18 23:38:01,737 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.028s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345678'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.028s ago] {'number': 12345, 'email': 'teststudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345678')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
___________________________ test_group_non_existant ____________________________

self = <sqlalchemy.engine.base.Connection object at 0x7f12aab13b30>
dialect = <sqlalchemy.dialects.postgresql.psycopg.PGDialect_psycopg object at 0x7f12aeb0c560>
context = <sqlalchemy.dialects.postgresql.psycopg.PGExecutionContext_psycopg object at 0x7f12aaa59310>
statement = <sqlalchemy.dialects.postgresql.psycopg.PGCompiler_psycopg object at 0x7f12aaa019a0>
parameters = [{'email': 'teststudent@example.com', 'id': UUID('12345678-1234-5678-1234-567812345678'), 'name': 'Test', 'number': 12345, ...}]

    def _exec_single_context(
        self,
        dialect: Dialect,
        context: ExecutionContext,
        statement: Union[str, Compiled],
        parameters: Optional[_AnyMultiExecuteParams],
    ) -> CursorResult[Any]:
        """continue the _execute_context() method for a single DBAPI
        cursor.execute() or cursor.executemany() call.
    
        """
        if dialect.bind_typing is BindTyping.SETINPUTSIZES:
            generic_setinputsizes = context._prepare_set_input_sizes()
    
            if generic_setinputsizes:
                try:
                    dialect.do_set_input_sizes(
                        context.cursor, generic_setinputsizes, context
                    )
                except BaseException as e:
                    self._handle_dbapi_exception(
                        e, str(statement), parameters, None, context
                    )
    
        cursor, str_statement, parameters = (
            context.cursor,
            context.statement,
            context.parameters,
        )
    
        effective_parameters: Optional[_AnyExecuteParams]
    
        if not context.executemany:
            effective_parameters = parameters[0]
        else:
            effective_parameters = parameters
    
        if self._has_events or self.engine._has_events:
            for fn in self.dispatch.before_cursor_execute:
                str_statement, effective_parameters = fn(
                    self,
                    cursor,
                    str_statement,
                    effective_parameters,
                    context,
                    context.executemany,
                )
    
        if self._echo:
            self._log_info(str_statement)
    
            stats = context._get_cache_stats()
    
            if not self.engine.hide_parameters:
                self._log_info(
                    "[%s] %r",
                    stats,
                    sql_util._repr_params(
                        effective_parameters,
                        batches=10,
                        ismulti=context.executemany,
                    ),
                )
            else:
                self._log_info(
                    "[%s] [SQL parameters hidden due to hide_parameters=True]",
                    stats,
                )
    
        evt_handled: bool = False
        try:
            if context.execute_style is ExecuteStyle.EXECUTEMANY:
                effective_parameters = cast(
                    "_CoreMultiExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_executemany:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_executemany(
                        cursor,
                        str_statement,
                        effective_parameters,
                        context,
                    )
            elif not effective_parameters and context.no_parameters:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute_no_params:
                        if fn(cursor, str_statement, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_execute_no_params(
                        cursor, str_statement, context
                    )
            else:
                effective_parameters = cast(
                    "_CoreSingleExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
>                   self.dialect.do_execute(
                        cursor, str_statement, effective_parameters, context
                    )

.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.12/site-packages/sqlalchemy/engine/default.py:941: in do_execute
    cursor.execute(statement, parameters)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <psycopg.Cursor [closed] [IDLE] (host=localhost user=postgres database=unigate) at 0x7f12aaa50890>
query = 'INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)'
params = {'email': 'teststudent@example.com', 'id': UUID('12345678-1234-5678-1234-567812345678'), 'name': 'Test', 'number': 12345, ...}

    def execute(
        self,
        query: Query,
        params: Params | None = None,
        *,
        prepare: bool | None = None,
        binary: bool | None = None,
    ) -> Self:
        """
        Execute a query or command to the database.
        """
        try:
            with self._conn.lock:
                self._conn.wait(
                    self._execute_gen(query, params, prepare=prepare, binary=binary)
                )
        except e._NO_TRACEBACK as ex:
>           raise ex.with_traceback(None)
E           psycopg.errors.UniqueViolation: duplicate key value violates unique constraint "ix_students_email"
E           DETAIL:  Key (email)=(teststudent@example.com) already exists.

.venv/lib/python3.12/site-packages/psycopg/cursor.py:97: UniqueViolation

The above exception was the direct cause of the following exception:

    def test_group_non_existant() -> None:
        student_id = "12345678-1234-5678-1234-567812345678"
>       create_student(student_id=student_id, number=12345, mail="teststudent")

tests/routes/test_join_public_group.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/routes/test_join_public_group.py:45: in create_student
    session.commit()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2028: in commit
    trans.commit(_to_root=True)
<string>:2: in commit
    ???
.venv/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
<string>:2: in _prepare_impl
    ???
.venv/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4352: in flush
    self._flush(objects)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4487: in _flush
    with util.safe_reraise():
.venv/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py:146: in __exit__
    raise exc_value.with_traceback(exc_tb)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4448: in _flush
    flush_context.execute()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
.venv/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
.venv/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py:1048: in _emit_insert_statements
    result = connection.execute(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1418: in execute
    return meth(
.venv/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:515: in _execute_on_connection
    return connection._execute_clauseelement(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1640: in _execute_clauseelement
    ret = self._execute_context(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2355: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/default.py:941: in do_execute
    cursor.execute(statement, parameters)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <psycopg.Cursor [closed] [IDLE] (host=localhost user=postgres database=unigate) at 0x7f12aaa50890>
query = 'INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)'
params = {'email': 'teststudent@example.com', 'id': UUID('12345678-1234-5678-1234-567812345678'), 'name': 'Test', 'number': 12345, ...}

    def execute(
        self,
        query: Query,
        params: Params | None = None,
        *,
        prepare: bool | None = None,
        binary: bool | None = None,
    ) -> Self:
        """
        Execute a query or command to the database.
        """
        try:
            with self._conn.lock:
                self._conn.wait(
                    self._execute_gen(query, params, prepare=prepare, binary=binary)
                )
        except e._NO_TRACEBACK as ex:
>           raise ex.with_traceback(None)
E           sqlalchemy.exc.IntegrityError: (psycopg.errors.UniqueViolation) duplicate key value violates unique constraint "ix_students_email"
E           DETAIL:  Key (email)=(teststudent@example.com) already exists.
E           [SQL: INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)]
E           [parameters: {'number': 12345, 'email': 'teststudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345678')}]
E           (Background on this error at: https://sqlalche.me/e/20/gkpj)

.venv/lib/python3.12/site-packages/psycopg/cursor.py:97: IntegrityError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:38:01,969 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:01,969 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:38:01,969 INFO sqlalchemy.engine.Engine [cached since 7.262s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345678'), 'param_1': 1}
2024-12-18 23:38:01,970 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:38:01,970 INFO sqlalchemy.engine.Engine [cached since 7.262s ago] {'number': 12345, 'email': 'teststudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345678')}
2024-12-18 23:38:01,971 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.262s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345678'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.262s ago] {'number': 12345, 'email': 'teststudent@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345678')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_______________________________ test_valid_join ________________________________

    def test_valid_join() -> None:
        student_id = "12345678-1234-5678-1234-567812345677"
        create_student(student_id=student_id, number=12346, mail="teststudentss")
        group_id = "12345678-1234-5678-1234-567812345678"
    
        r = client.post(
            "/groups/join_public_group",
            params={
                "student_id": student_id,
                "group_id": group_id,
            },
        )
>       assert r.status_code == 200
E       assert 405 == 200
E        +  where 405 = <Response [405 Method Not Allowed]>.status_code

tests/routes/test_join_public_group.py:107: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:38:02,207 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:02,207 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:38:02,207 INFO sqlalchemy.engine.Engine [cached since 7.5s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345677'), 'param_1': 1}
2024-12-18 23:38:02,208 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:38:02,209 INFO sqlalchemy.engine.Engine [cached since 7.5s ago] {'number': 12346, 'email': 'teststudentss@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345677')}
2024-12-18 23:38:02,209 INFO sqlalchemy.engine.Engine COMMIT
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.5s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345677'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.5s ago] {'number': 12346, 'email': 'teststudentss@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5678-1234-567812345677')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
____________________________ test_double_enrollment ____________________________

client = <starlette.testclient.TestClient object at 0x7f12aaad55e0>

    def test_double_enrollment(client: TestClient) -> None:
        student_id = "12345678-1234-5678-1234-567812345677"
        create_student(student_id=student_id, number=12346, mail="teststudentss")
        group_id = "12345678-1234-5678-1234-567812345678"
    
        r = client.post(
            "/groups/join_public_group",
            params={
                "student_id": student_id,
                "group_id": group_id,
            },
        )
>       assert r.status_code == 200
E       assert 405 == 200
E        +  where 405 = <Response [405 Method Not Allowed]>.status_code

tests/routes/test_join_public_group.py:123: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:38:02,216 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:02,217 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:38:02,217 INFO sqlalchemy.engine.Engine [cached since 7.51s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345677'), 'param_1': 1}
2024-12-18 23:38:02,217 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.51s ago] {'id_1': UUID('12345678-1234-5678-1234-567812345677'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
__________________________ test_student_non_existent ___________________________

    def test_student_non_existent() -> None:
        # Adjust test to ensure the group is created so that we get a student-related error
        create_student(student_id=student_id, number=12348, mail="testsdstudent2")
        create_group(student_id=student_id, group_id=group_id)
        # Not creating student_id2 so the student should not be found
        r = client.post(
            "/groups/" + group_id + "/leave",
            params={
                "student_id": student_id2,
                "group_id": group_id,
            },
        )
        # Adjusted to match code which returns 404 and "Student not found."
        assert r.status_code == 404
>       assert r.json() == {"detail": "Student not found."}
E       AssertionError: assert {'detail': 'Group not found.'} == {'detail': 'S...t not found.'}
E         
E         Differing items:
E         {'detail': 'Group not found.'} != {'detail': 'Student not found.'}
E         Use -v to get more diff

tests/routes/test_leave_group.py:84: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:38:02,229 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:02,230 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:38:02,230 INFO sqlalchemy.engine.Engine [cached since 7.523s ago] {'id_1': UUID('12745678-1234-5678-1234-567812345678'), 'param_1': 1}
2024-12-18 23:38:02,231 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:02,233 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:02,234 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:38:02,234 INFO sqlalchemy.engine.Engine [cached since 8.409s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
2024-12-18 23:38:02,234 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.523s ago] {'id_1': UUID('12745678-1234-5678-1234-567812345678'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 8.409s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_______________________________ test_valid_leave _______________________________

    def test_valid_leave() -> None:
        # Adjust test to not rely on "students" before checking the group schema
        # Ensure the group and two students exist
        create_student(student_id=student_id, number=12349, mail="testsstudent1")
        create_student(student_id=student_id2, number=12350, mail="testsstudent2")
        create_group(student_id=student_id, group_id=group_id)
    
        # Join both students to the group
        join_resp1 = client.post(
            "/groups/" + group_id + "/join",
            params={
                "student_id": student_id,
                "group_id": group_id,
            },
        )
>       assert join_resp1.status_code == 200
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/routes/test_leave_group.py:102: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:38:02,239 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:02,239 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:38:02,239 INFO sqlalchemy.engine.Engine [cached since 7.532s ago] {'id_1': UUID('12745678-1234-5678-1234-567812345678'), 'param_1': 1}
2024-12-18 23:38:02,239 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:02,240 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:02,240 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:38:02,240 INFO sqlalchemy.engine.Engine [cached since 7.533s ago] {'id_1': UUID('12345678-1234-5778-1234-567812345678'), 'param_1': 1}
2024-12-18 23:38:02,241 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:38:02,241 INFO sqlalchemy.engine.Engine [cached since 7.532s ago] {'number': 12350, 'email': 'testsstudent2@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5778-1234-567812345678')}
2024-12-18 23:38:02,241 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:38:02,244 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:02,244 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:38:02,244 INFO sqlalchemy.engine.Engine [cached since 8.42s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
2024-12-18 23:38:02,245 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.532s ago] {'id_1': UUID('12745678-1234-5678-1234-567812345678'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.533s ago] {'id_1': UUID('12345678-1234-5778-1234-567812345678'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.532s ago] {'number': 12350, 'email': 'testsstudent2@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345678-1234-5778-1234-567812345678')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 8.42s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_________________________ test_valid_leave_no_members __________________________

client = <starlette.testclient.TestClient object at 0x7f12aa97c590>

    def test_valid_leave_no_members(client: TestClient) -> None:
        # Adjust test so it doesn't expect the group to be deleted
        # Instead, after the last member leaves, we still get 200 with empty students
        create_student(student_id=student_id, number=12351, mail="testnostudent")
        create_group(student_id=student_id, group_id=group_id)
        join_resp = client.post(
            "/groups/" + group_id + "/join",
            params={
                "student_id": student_id,
                "group_id": group_id,
            },
        )
>       assert join_resp.status_code == 200
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/routes/test_leave_group.py:150: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:38:02,252 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:02,253 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:38:02,253 INFO sqlalchemy.engine.Engine [cached since 7.546s ago] {'id_1': UUID('12745678-1234-5678-1234-567812345678'), 'param_1': 1}
2024-12-18 23:38:02,254 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:02,256 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:02,257 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:38:02,257 INFO sqlalchemy.engine.Engine [cached since 8.432s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
2024-12-18 23:38:02,257 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 7.546s ago] {'id_1': UUID('12745678-1234-5678-1234-567812345678'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 8.432s ago] {'id_1': UUID('12375678-1234-5678-1234-567812345677')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_________________________ test_login_invalid_username __________________________

    def test_login_invalid_username() -> None:
        """Test login with an invalid username."""
>       response = client.post(
            "/auth/login", data={"username": INVALID_USERNAME, "password": VALID_PASSWORD}
        )

tests/routes/test_login.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.12/site-packages/starlette/testclient.py:593: in post
    return super().post(
.venv/lib/python3.12/site-packages/httpx/_client.py:1144: in post
    return self.request(
.venv/lib/python3.12/site-packages/starlette/testclient.py:484: in request
    return super().request(
.venv/lib/python3.12/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv/lib/python3.12/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
.venv/lib/python3.12/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
.venv/lib/python3.12/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
.venv/lib/python3.12/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
.venv/lib/python3.12/site-packages/starlette/testclient.py:377: in handle_request
    raise exc
.venv/lib/python3.12/site-packages/starlette/testclient.py:374: in handle_request
    portal.call(self.app, scope, receive, send)
.venv/lib/python3.12/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv/lib/python3.12/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
.venv/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
.venv/lib/python3.12/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
.venv/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
.venv/lib/python3.12/site-packages/starlette/routing.py:715: in __call__
    await self.middleware_stack(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/routing.py:735: in app
    await route.handle(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
.venv/lib/python3.12/site-packages/starlette/routing.py:73: in app
    response = await f(request)
.venv/lib/python3.12/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
.venv/lib/python3.12/site-packages/fastapi/routing.py:214: in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
.venv/lib/python3.12/site-packages/starlette/concurrency.py:39: in run_in_threadpool
    return await anyio.to_thread.run_sync(func, *args)
.venv/lib/python3.12/site-packages/anyio/to_thread.py:56: in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
.venv/lib/python3.12/site-packages/anyio/_backends/_asyncio.py:2505: in run_sync_in_worker_thread
    return await future
.venv/lib/python3.12/site-packages/anyio/_backends/_asyncio.py:1005: in run
    result = context.run(func, *args)
unigate/routes/auth.py:33: in login
    role, number = get_role_and_number(form_data.username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

username = 'invalid_user'

    def get_role_and_number(username: str) -> tuple[str, int]:
        if len(username) < 2:
            raise HTTPException(status_code=401, detail="Invalid username")
        role = username[0]
>       number = int(username[1:])
E       ValueError: invalid literal for int() with base 10: 'nvalid_user'

unigate/routes/auth.py:20: ValueError
_____________________________ test_my_groups_empty _____________________________

    def test_my_groups_empty() -> None:
        create_student(student_id=student_id, number=159, mail="puffi")
        response = client.post(
            "/groups/get_student_groups",
            params={
                "student_id": student_id,
            },
        )
        data = response.json()
>       assert isinstance(data, list)
E       AssertionError: assert False
E        +  where False = isinstance({'detail': 'Method Not Allowed'}, list)

tests/routes/test_my_groups.py:77: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:38:02,999 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:02,999 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:38:02,999 INFO sqlalchemy.engine.Engine [cached since 8.292s ago] {'id_1': UUID('12345672-1234-5678-1234-567812345677'), 'param_1': 1}
2024-12-18 23:38:03,001 INFO sqlalchemy.engine.Engine INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
2024-12-18 23:38:03,001 INFO sqlalchemy.engine.Engine [cached since 8.292s ago] {'number': 159, 'email': 'puffi@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345672-1234-5678-1234-567812345677')}
2024-12-18 23:38:03,001 INFO sqlalchemy.engine.Engine COMMIT
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students 
WHERE students.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 8.292s ago] {'id_1': UUID('12345672-1234-5678-1234-567812345677'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO students (number, email, name, surname, id) VALUES (%(number)s::INTEGER, %(email)s::VARCHAR, %(name)s::VARCHAR, %(surname)s::VARCHAR, %(id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 8.292s ago] {'number': 159, 'email': 'puffi@example.com', 'name': 'Test', 'surname': 'Student', 'id': UUID('12345672-1234-5678-1234-567812345677')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
________________________________ test_my_groups ________________________________

    def test_my_groups() -> None:
        group = create_group(
            student_id=student_id, group_id="12345672-1234-5678-1234-567812345657"
        )
        client.post(
            "/groups/join_public_group",
            params={
                "student_id": student_id,
>               "group_id": group["id"],
            },
        )
E       KeyError: 'id'

tests/routes/test_my_groups.py:89: KeyError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:38:03,014 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:03,015 INFO sqlalchemy.engine.Engine SELECT groups.name AS groups_name, groups.description AS groups_description, groups.category AS groups_category, groups.type AS groups_type, groups.id AS groups_id, groups.creator_id AS groups_creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
2024-12-18 23:38:03,015 INFO sqlalchemy.engine.Engine [generated in 0.00011s] {'id_1': UUID('12345672-1234-5678-1234-567812345657'), 'param_1': 1}
2024-12-18 23:38:03,016 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name AS groups_name, groups.description AS groups_description, groups.category AS groups_category, groups.type AS groups_type, groups.id AS groups_id, groups.creator_id AS groups_creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID 
 LIMIT %(param_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00011s] {'id_1': UUID('12345672-1234-5678-1234-567812345657'), 'param_1': 1}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_____________________ test_reject_request_already_rejected _____________________

    def test_reject_request_already_rejected() -> None:
        group_data = create_private_group(group_id, student_id)
        created_group_id = group_data["id"]
    
        token_data = authenticate_user()
        token = token_data["access_token"]
        headers = {"Authorization": f"Bearer {token}"}
    
        # Create a join request
        client.post(f"/groups/{created_group_id}/join", headers=headers)
        response = client.get(f"/groups/{created_group_id}/requests", headers=headers)
        requests_data = response.json()
        if len(requests_data) == 0:
            # If no requests, can't test rejection. Just return.
            return
        request_id = requests_data[0]["id"]
    
        # Reject it once
        client.post(f"/groups/{created_group_id}/requests/{request_id}/reject", headers=headers)
        # Reject again should fail with 400 and "Request is already rejected."
        second_response = client.post(f"/groups/{created_group_id}/requests/{request_id}/reject", headers=headers)
    
>       assert second_response.status_code == 400
E       assert 200 == 400
E        +  where 200 = <Response [200 OK]>.status_code

tests/routes/test_private_group_join_request_response.py:189: AssertionError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:38:05,722 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:05,722 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:05,722 INFO sqlalchemy.engine.Engine [cached since 12.48s ago] {'number_1': 1234567}
2024-12-18 23:38:05,987 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:05,992 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:05,993 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:05,993 INFO sqlalchemy.engine.Engine [cached since 12.75s ago] {'number_1': 1234567}
2024-12-18 23:38:05,995 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:38:05,995 INFO sqlalchemy.engine.Engine [cached since 12.47s ago] {'name': 'TestGroup-OyuloW', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393'), 'creator_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
2024-12-18 23:38:05,996 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:38:05,996 INFO sqlalchemy.engine.Engine [cached since 12.47s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:38:05,996 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:38:05,996 INFO sqlalchemy.engine.Engine [cached since 12.47s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:05,997 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:38:06,005 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,005 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:38:06,005 INFO sqlalchemy.engine.Engine [cached since 12.47s ago] {'pk_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,006 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:38:06,006 INFO sqlalchemy.engine.Engine [cached since 12.47s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,007 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:38:06,007 INFO sqlalchemy.engine.Engine [cached since 12.46s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,008 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
2024-12-18 23:38:06,008 INFO sqlalchemy.engine.Engine [cached since 12.46s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,009 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:06,012 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,012 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:06,012 INFO sqlalchemy.engine.Engine [cached since 12.77s ago] {'number_1': 1234567}
2024-12-18 23:38:06,278 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:06,281 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,281 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:38:06,281 INFO sqlalchemy.engine.Engine [cached since 12.46s ago] {'id_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,283 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:06,284 INFO sqlalchemy.engine.Engine [cached since 13.04s ago] {'number_1': 1234567}
2024-12-18 23:38:06,285 INFO sqlalchemy.engine.Engine SELECT requests.student_id AS requests_student_id, requests.group_id AS requests_group_id, requests.id AS requests_id, requests.status AS requests_status 
FROM requests 
WHERE %(param_1)s::UUID = requests.group_id
2024-12-18 23:38:06,285 INFO sqlalchemy.engine.Engine [cached since 2.691s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,286 INFO sqlalchemy.engine.Engine INSERT INTO requests (student_id, group_id, id, status) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(id)s::UUID, %(status)s)
2024-12-18 23:38:06,286 INFO sqlalchemy.engine.Engine [cached since 2.69s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393'), 'id': UUID('f9dbdf36-2b13-4341-8e43-e7b288228645'), 'status': 'PENDING'}
2024-12-18 23:38:06,287 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:38:06,295 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,296 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:38:06,296 INFO sqlalchemy.engine.Engine [cached since 12.76s ago] {'pk_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,297 INFO sqlalchemy.engine.Engine SELECT requests.student_id, requests.group_id, requests.id, requests.status 
FROM requests 
WHERE requests.id = %(pk_1)s::UUID
2024-12-18 23:38:06,297 INFO sqlalchemy.engine.Engine [cached since 2.691s ago] {'pk_1': UUID('f9dbdf36-2b13-4341-8e43-e7b288228645')}
2024-12-18 23:38:06,298 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:38:06,298 INFO sqlalchemy.engine.Engine [cached since 12.76s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,299 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:38:06,299 INFO sqlalchemy.engine.Engine [cached since 12.75s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,300 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
2024-12-18 23:38:06,300 INFO sqlalchemy.engine.Engine [cached since 12.75s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,302 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:06,305 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,305 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:38:06,305 INFO sqlalchemy.engine.Engine [cached since 12.48s ago] {'id_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,307 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:06,307 INFO sqlalchemy.engine.Engine [cached since 13.07s ago] {'number_1': 1234567}
2024-12-18 23:38:06,309 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:38:06,309 INFO sqlalchemy.engine.Engine [cached since 12.76s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,310 INFO sqlalchemy.engine.Engine SELECT requests.student_id AS requests_student_id, requests.group_id AS requests_group_id, requests.id AS requests_id, requests.status AS requests_status 
FROM requests 
WHERE %(param_1)s::UUID = requests.group_id
2024-12-18 23:38:06,310 INFO sqlalchemy.engine.Engine [cached since 2.716s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,312 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:06,314 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,315 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:38:06,315 INFO sqlalchemy.engine.Engine [cached since 12.49s ago] {'id_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,316 INFO sqlalchemy.engine.Engine SELECT requests.student_id, requests.group_id, requests.id, requests.status 
FROM requests 
WHERE requests.id = %(id_1)s::UUID
2024-12-18 23:38:06,316 INFO sqlalchemy.engine.Engine [cached since 0.6451s ago] {'id_1': UUID('f9dbdf36-2b13-4341-8e43-e7b288228645')}
2024-12-18 23:38:06,317 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:06,317 INFO sqlalchemy.engine.Engine [cached since 13.08s ago] {'number_1': 1234567}
2024-12-18 23:38:06,318 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:38:06,318 INFO sqlalchemy.engine.Engine [cached since 12.77s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,319 INFO sqlalchemy.engine.Engine UPDATE requests SET status=%(status)s WHERE requests.id = %(requests_id)s::UUID
2024-12-18 23:38:06,319 INFO sqlalchemy.engine.Engine [cached since 0.6445s ago] {'status': 'REJECTED', 'requests_id': UUID('f9dbdf36-2b13-4341-8e43-e7b288228645')}
2024-12-18 23:38:06,319 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:38:06,320 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,320 INFO sqlalchemy.engine.Engine SELECT requests.student_id, requests.group_id, requests.id, requests.status 
FROM requests 
WHERE requests.id = %(pk_1)s::UUID
2024-12-18 23:38:06,321 INFO sqlalchemy.engine.Engine [cached since 2.715s ago] {'pk_1': UUID('f9dbdf36-2b13-4341-8e43-e7b288228645')}
2024-12-18 23:38:06,322 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:06,324 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,324 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:38:06,324 INFO sqlalchemy.engine.Engine [cached since 12.5s ago] {'id_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,325 INFO sqlalchemy.engine.Engine SELECT requests.student_id, requests.group_id, requests.id, requests.status 
FROM requests 
WHERE requests.id = %(id_1)s::UUID
2024-12-18 23:38:06,325 INFO sqlalchemy.engine.Engine [cached since 0.6543s ago] {'id_1': UUID('f9dbdf36-2b13-4341-8e43-e7b288228645')}
2024-12-18 23:38:06,326 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:06,327 INFO sqlalchemy.engine.Engine [cached since 13.09s ago] {'number_1': 1234567}
2024-12-18 23:38:06,327 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:38:06,327 INFO sqlalchemy.engine.Engine [cached since 12.78s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
2024-12-18 23:38:06,328 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:38:06,328 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,329 INFO sqlalchemy.engine.Engine SELECT requests.student_id, requests.group_id, requests.id, requests.status 
FROM requests 
WHERE requests.id = %(pk_1)s::UUID
2024-12-18 23:38:06,329 INFO sqlalchemy.engine.Engine [cached since 2.723s ago] {'pk_1': UUID('f9dbdf36-2b13-4341-8e43-e7b288228645')}
2024-12-18 23:38:06,329 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.48s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.75s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.47s ago] {'name': 'TestGroup-OyuloW', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393'), 'creator_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.47s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393'), 'date': datetime.date(2024, 12, 18)}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.47s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.47s ago] {'pk_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.47s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.46s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.46s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.77s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.46s ago] {'id_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.04s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT requests.student_id AS requests_student_id, requests.group_id AS requests_group_id, requests.id AS requests_id, requests.status AS requests_status 
FROM requests 
WHERE %(param_1)s::UUID = requests.group_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 2.691s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO requests (student_id, group_id, id, status) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(id)s::UUID, %(status)s)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 2.69s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393'), 'id': UUID('f9dbdf36-2b13-4341-8e43-e7b288228645'), 'status': 'PENDING'}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.76s ago] {'pk_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT requests.student_id, requests.group_id, requests.id, requests.status 
FROM requests 
WHERE requests.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 2.691s ago] {'pk_1': UUID('f9dbdf36-2b13-4341-8e43-e7b288228645')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.76s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.75s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.75s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.48s ago] {'id_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.07s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.76s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT requests.student_id AS requests_student_id, requests.group_id AS requests_group_id, requests.id AS requests_id, requests.status AS requests_status 
FROM requests 
WHERE %(param_1)s::UUID = requests.group_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 2.716s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.49s ago] {'id_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT requests.student_id, requests.group_id, requests.id, requests.status 
FROM requests 
WHERE requests.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 0.6451s ago] {'id_1': UUID('f9dbdf36-2b13-4341-8e43-e7b288228645')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.08s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.77s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:1846 UPDATE requests SET status=%(status)s WHERE requests.id = %(requests_id)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 0.6445s ago] {'status': 'REJECTED', 'requests_id': UUID('f9dbdf36-2b13-4341-8e43-e7b288228645')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT requests.student_id, requests.group_id, requests.id, requests.status 
FROM requests 
WHERE requests.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 2.715s ago] {'pk_1': UUID('f9dbdf36-2b13-4341-8e43-e7b288228645')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.5s ago] {'id_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT requests.student_id, requests.group_id, requests.id, requests.status 
FROM requests 
WHERE requests.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 0.6543s ago] {'id_1': UUID('f9dbdf36-2b13-4341-8e43-e7b288228645')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.09s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.78s ago] {'param_1': UUID('a1175c73-b7ca-4d8d-bcd6-d2ef47323393')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT requests.student_id, requests.group_id, requests.id, requests.status 
FROM requests 
WHERE requests.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 2.723s ago] {'pk_1': UUID('f9dbdf36-2b13-4341-8e43-e7b288228645')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
_________________________ test_approve_request_success _________________________

self = <sqlalchemy.engine.base.Connection object at 0x7f12aa867050>
dialect = <sqlalchemy.dialects.postgresql.psycopg.PGDialect_psycopg object at 0x7f12aeb0c560>
context = <sqlalchemy.dialects.postgresql.psycopg.PGExecutionContext_psycopg object at 0x7f12aaa4c350>
statement = <sqlalchemy.dialects.postgresql.psycopg.PGCompiler_psycopg object at 0x7f12abfc8b30>
parameters = [{'date': datetime.date(2024, 12, 18), 'group_id': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7'), 'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}]

    def _exec_single_context(
        self,
        dialect: Dialect,
        context: ExecutionContext,
        statement: Union[str, Compiled],
        parameters: Optional[_AnyMultiExecuteParams],
    ) -> CursorResult[Any]:
        """continue the _execute_context() method for a single DBAPI
        cursor.execute() or cursor.executemany() call.
    
        """
        if dialect.bind_typing is BindTyping.SETINPUTSIZES:
            generic_setinputsizes = context._prepare_set_input_sizes()
    
            if generic_setinputsizes:
                try:
                    dialect.do_set_input_sizes(
                        context.cursor, generic_setinputsizes, context
                    )
                except BaseException as e:
                    self._handle_dbapi_exception(
                        e, str(statement), parameters, None, context
                    )
    
        cursor, str_statement, parameters = (
            context.cursor,
            context.statement,
            context.parameters,
        )
    
        effective_parameters: Optional[_AnyExecuteParams]
    
        if not context.executemany:
            effective_parameters = parameters[0]
        else:
            effective_parameters = parameters
    
        if self._has_events or self.engine._has_events:
            for fn in self.dispatch.before_cursor_execute:
                str_statement, effective_parameters = fn(
                    self,
                    cursor,
                    str_statement,
                    effective_parameters,
                    context,
                    context.executemany,
                )
    
        if self._echo:
            self._log_info(str_statement)
    
            stats = context._get_cache_stats()
    
            if not self.engine.hide_parameters:
                self._log_info(
                    "[%s] %r",
                    stats,
                    sql_util._repr_params(
                        effective_parameters,
                        batches=10,
                        ismulti=context.executemany,
                    ),
                )
            else:
                self._log_info(
                    "[%s] [SQL parameters hidden due to hide_parameters=True]",
                    stats,
                )
    
        evt_handled: bool = False
        try:
            if context.execute_style is ExecuteStyle.EXECUTEMANY:
                effective_parameters = cast(
                    "_CoreMultiExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_executemany:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_executemany(
                        cursor,
                        str_statement,
                        effective_parameters,
                        context,
                    )
            elif not effective_parameters and context.no_parameters:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute_no_params:
                        if fn(cursor, str_statement, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_execute_no_params(
                        cursor, str_statement, context
                    )
            else:
                effective_parameters = cast(
                    "_CoreSingleExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
>                   self.dialect.do_execute(
                        cursor, str_statement, effective_parameters, context
                    )

.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.12/site-packages/sqlalchemy/engine/default.py:941: in do_execute
    cursor.execute(statement, parameters)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <psycopg.Cursor [closed] [IDLE] (host=localhost user=postgres database=unigate) at 0x7f12aa95f4d0>
query = 'INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)'
params = {'date': datetime.date(2024, 12, 18), 'group_id': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7'), 'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}

    def execute(
        self,
        query: Query,
        params: Params | None = None,
        *,
        prepare: bool | None = None,
        binary: bool | None = None,
    ) -> Self:
        """
        Execute a query or command to the database.
        """
        try:
            with self._conn.lock:
                self._conn.wait(
                    self._execute_gen(query, params, prepare=prepare, binary=binary)
                )
        except e._NO_TRACEBACK as ex:
>           raise ex.with_traceback(None)
E           psycopg.errors.UniqueViolation: duplicate key value violates unique constraint "joins_pkey"
E           DETAIL:  Key (student_id, group_id)=(ff405335-0cf3-4339-a01c-706a44ddc583, 68d99651-2eb2-4813-9ef9-16ce285a4ed7) already exists.

.venv/lib/python3.12/site-packages/psycopg/cursor.py:97: UniqueViolation

The above exception was the direct cause of the following exception:

    def test_approve_request_success() -> None:
        create_student(student_id=student_id, email_par="ciao@example.com")
        create_student(student_id=student_id2, email_par="ciao2@example.com")
        group_data = create_private_group(group_id, student_id)
        created_group_id = group_data["id"]
    
        token_data = authenticate_user()
        token = token_data["access_token"]
        headers = {"Authorization": f"Bearer {token}"}
    
        # Create a join request
        client.post(f"/groups/{created_group_id}/join", headers=headers)
    
        # Get the request ID
        response = client.get(f"/groups/{created_group_id}/requests", headers=headers)
        requests_data = response.json()
        if len(requests_data) == 0:
            # If no requests, can't approve. Just return.
            return
        request_id = requests_data[0]["id"]
    
>       approve_response = client.post(f"/groups/{created_group_id}/requests/{request_id}/approve", headers=headers)

tests/routes/test_private_group_join_request_response.py:214: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.12/site-packages/starlette/testclient.py:593: in post
    return super().post(
.venv/lib/python3.12/site-packages/httpx/_client.py:1144: in post
    return self.request(
.venv/lib/python3.12/site-packages/starlette/testclient.py:484: in request
    return super().request(
.venv/lib/python3.12/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv/lib/python3.12/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
.venv/lib/python3.12/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
.venv/lib/python3.12/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
.venv/lib/python3.12/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
.venv/lib/python3.12/site-packages/starlette/testclient.py:377: in handle_request
    raise exc
.venv/lib/python3.12/site-packages/starlette/testclient.py:374: in handle_request
    portal.call(self.app, scope, receive, send)
.venv/lib/python3.12/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/lib/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/lib/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv/lib/python3.12/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
.venv/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
.venv/lib/python3.12/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
.venv/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
.venv/lib/python3.12/site-packages/starlette/routing.py:715: in __call__
    await self.middleware_stack(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/routing.py:735: in app
    await route.handle(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
.venv/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
.venv/lib/python3.12/site-packages/starlette/routing.py:73: in app
    response = await f(request)
.venv/lib/python3.12/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
.venv/lib/python3.12/site-packages/fastapi/routing.py:214: in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
.venv/lib/python3.12/site-packages/starlette/concurrency.py:39: in run_in_threadpool
    return await anyio.to_thread.run_sync(func, *args)
.venv/lib/python3.12/site-packages/anyio/to_thread.py:56: in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
.venv/lib/python3.12/site-packages/anyio/_backends/_asyncio.py:2505: in run_sync_in_worker_thread
    return await future
.venv/lib/python3.12/site-packages/anyio/_backends/_asyncio.py:1005: in run
    result = context.run(func, *args)
unigate/routes/group.py:128: in accept_group_request
    return crud.group.approve_request(session=session, request=request)
unigate/crud/group.py:56: in approve_request
    session.commit()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2028: in commit
    trans.commit(_to_root=True)
<string>:2: in commit
    ???
.venv/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
<string>:2: in _prepare_impl
    ???
.venv/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4352: in flush
    self._flush(objects)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4487: in _flush
    with util.safe_reraise():
.venv/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py:146: in __exit__
    raise exc_value.with_traceback(exc_tb)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/session.py:4448: in _flush
    flush_context.execute()
.venv/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py:591: in execute
    self.dependency_processor.process_saves(uow, states)
.venv/lib/python3.12/site-packages/sqlalchemy/orm/dependency.py:1197: in process_saves
    self._run_crud(
.venv/lib/python3.12/site-packages/sqlalchemy/orm/dependency.py:1260: in _run_crud
    connection.execute(statement, secondary_insert)
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1418: in execute
    return meth(
.venv/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:515: in _execute_on_connection
    return connection._execute_clauseelement(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1640: in _execute_clauseelement
    ret = self._execute_context(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2355: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/default.py:941: in do_execute
    cursor.execute(statement, parameters)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <psycopg.Cursor [closed] [IDLE] (host=localhost user=postgres database=unigate) at 0x7f12aa95f4d0>
query = 'INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)'
params = {'date': datetime.date(2024, 12, 18), 'group_id': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7'), 'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}

    def execute(
        self,
        query: Query,
        params: Params | None = None,
        *,
        prepare: bool | None = None,
        binary: bool | None = None,
    ) -> Self:
        """
        Execute a query or command to the database.
        """
        try:
            with self._conn.lock:
                self._conn.wait(
                    self._execute_gen(query, params, prepare=prepare, binary=binary)
                )
        except e._NO_TRACEBACK as ex:
>           raise ex.with_traceback(None)
E           sqlalchemy.exc.IntegrityError: (psycopg.errors.UniqueViolation) duplicate key value violates unique constraint "joins_pkey"
E           DETAIL:  Key (student_id, group_id)=(ff405335-0cf3-4339-a01c-706a44ddc583, 68d99651-2eb2-4813-9ef9-16ce285a4ed7) already exists.
E           [SQL: INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)]
E           [parameters: {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7'), 'date': datetime.date(2024, 12, 18)}]
E           (Background on this error at: https://sqlalche.me/e/20/gkpj)

.venv/lib/python3.12/site-packages/psycopg/cursor.py:97: IntegrityError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:38:06,334 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,334 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
2024-12-18 23:38:06,335 INFO sqlalchemy.engine.Engine [cached since 12.51s ago] {'id_1': UUID('c7f8db5e-98ef-4f3b-81bc-6844269c8ba3')}
2024-12-18 23:38:06,335 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:06,336 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,336 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
2024-12-18 23:38:06,336 INFO sqlalchemy.engine.Engine [cached since 12.51s ago] {'id_1': UUID('897b9e31-1673-4d24-8afb-6112e2ed5eb6')}
2024-12-18 23:38:06,336 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:06,338 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,338 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:06,338 INFO sqlalchemy.engine.Engine [cached since 13.1s ago] {'number_1': 1234567}
2024-12-18 23:38:06,601 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:06,605 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,606 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:06,606 INFO sqlalchemy.engine.Engine [cached since 13.37s ago] {'number_1': 1234567}
2024-12-18 23:38:06,608 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:38:06,608 INFO sqlalchemy.engine.Engine [cached since 13.08s ago] {'name': 'TestGroup-XFZqzA', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7'), 'creator_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
2024-12-18 23:38:06,609 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:38:06,609 INFO sqlalchemy.engine.Engine [cached since 13.08s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:38:06,609 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:38:06,609 INFO sqlalchemy.engine.Engine [cached since 13.08s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,610 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:38:06,618 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,619 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:38:06,619 INFO sqlalchemy.engine.Engine [cached since 13.08s ago] {'pk_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,620 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:38:06,620 INFO sqlalchemy.engine.Engine [cached since 13.08s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,622 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:38:06,622 INFO sqlalchemy.engine.Engine [cached since 13.08s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,623 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
2024-12-18 23:38:06,623 INFO sqlalchemy.engine.Engine [cached since 13.08s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,625 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:06,629 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,629 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:06,630 INFO sqlalchemy.engine.Engine [cached since 13.39s ago] {'number_1': 1234567}
2024-12-18 23:38:06,896 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:06,899 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,899 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:38:06,899 INFO sqlalchemy.engine.Engine [cached since 13.07s ago] {'id_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,901 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:06,901 INFO sqlalchemy.engine.Engine [cached since 13.66s ago] {'number_1': 1234567}
2024-12-18 23:38:06,903 INFO sqlalchemy.engine.Engine SELECT requests.student_id AS requests_student_id, requests.group_id AS requests_group_id, requests.id AS requests_id, requests.status AS requests_status 
FROM requests 
WHERE %(param_1)s::UUID = requests.group_id
2024-12-18 23:38:06,903 INFO sqlalchemy.engine.Engine [cached since 3.308s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,903 INFO sqlalchemy.engine.Engine INSERT INTO requests (student_id, group_id, id, status) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(id)s::UUID, %(status)s)
2024-12-18 23:38:06,903 INFO sqlalchemy.engine.Engine [cached since 3.308s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7'), 'id': UUID('d2aa94c9-84d6-4701-b3ca-08729d476f9e'), 'status': 'PENDING'}
2024-12-18 23:38:06,904 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:38:06,912 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,912 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:38:06,912 INFO sqlalchemy.engine.Engine [cached since 13.37s ago] {'pk_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,913 INFO sqlalchemy.engine.Engine SELECT requests.student_id, requests.group_id, requests.id, requests.status 
FROM requests 
WHERE requests.id = %(pk_1)s::UUID
2024-12-18 23:38:06,913 INFO sqlalchemy.engine.Engine [cached since 3.307s ago] {'pk_1': UUID('d2aa94c9-84d6-4701-b3ca-08729d476f9e')}
2024-12-18 23:38:06,914 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:38:06,914 INFO sqlalchemy.engine.Engine [cached since 13.37s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,915 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:38:06,915 INFO sqlalchemy.engine.Engine [cached since 13.37s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,916 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
2024-12-18 23:38:06,916 INFO sqlalchemy.engine.Engine [cached since 13.37s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,917 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:06,919 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,920 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:38:06,920 INFO sqlalchemy.engine.Engine [cached since 13.1s ago] {'id_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,922 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:06,923 INFO sqlalchemy.engine.Engine [cached since 13.68s ago] {'number_1': 1234567}
2024-12-18 23:38:06,924 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:38:06,924 INFO sqlalchemy.engine.Engine [cached since 13.38s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,925 INFO sqlalchemy.engine.Engine SELECT requests.student_id AS requests_student_id, requests.group_id AS requests_group_id, requests.id AS requests_id, requests.status AS requests_status 
FROM requests 
WHERE %(param_1)s::UUID = requests.group_id
2024-12-18 23:38:06,925 INFO sqlalchemy.engine.Engine [cached since 3.33s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,926 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:06,928 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:06,929 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:38:06,929 INFO sqlalchemy.engine.Engine [cached since 13.1s ago] {'id_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,930 INFO sqlalchemy.engine.Engine SELECT requests.student_id, requests.group_id, requests.id, requests.status 
FROM requests 
WHERE requests.id = %(id_1)s::UUID
2024-12-18 23:38:06,930 INFO sqlalchemy.engine.Engine [cached since 1.259s ago] {'id_1': UUID('d2aa94c9-84d6-4701-b3ca-08729d476f9e')}
2024-12-18 23:38:06,931 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:06,931 INFO sqlalchemy.engine.Engine [cached since 13.69s ago] {'number_1': 1234567}
2024-12-18 23:38:06,932 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:38:06,932 INFO sqlalchemy.engine.Engine [cached since 13.39s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,933 INFO sqlalchemy.engine.Engine UPDATE requests SET status=%(status)s WHERE requests.id = %(requests_id)s::UUID
2024-12-18 23:38:06,933 INFO sqlalchemy.engine.Engine [cached since 1.258s ago] {'status': 'APPROVED', 'requests_id': UUID('d2aa94c9-84d6-4701-b3ca-08729d476f9e')}
2024-12-18 23:38:06,933 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:38:06,933 INFO sqlalchemy.engine.Engine [cached since 13.39s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
2024-12-18 23:38:06,934 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:38:06,934 INFO sqlalchemy.engine.Engine [cached since 13.41s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:38:06,935 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.51s ago] {'id_1': UUID('c7f8db5e-98ef-4f3b-81bc-6844269c8ba3')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 12.51s ago] {'id_1': UUID('897b9e31-1673-4d24-8afb-6112e2ed5eb6')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.1s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.37s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.08s ago] {'name': 'TestGroup-XFZqzA', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PRIVATE', 'id': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7'), 'creator_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.08s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7'), 'date': datetime.date(2024, 12, 18)}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.08s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.08s ago] {'pk_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.08s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.08s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.08s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.39s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.07s ago] {'id_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.66s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT requests.student_id AS requests_student_id, requests.group_id AS requests_group_id, requests.id AS requests_id, requests.status AS requests_status 
FROM requests 
WHERE %(param_1)s::UUID = requests.group_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 3.308s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO requests (student_id, group_id, id, status) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(id)s::UUID, %(status)s)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 3.308s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7'), 'id': UUID('d2aa94c9-84d6-4701-b3ca-08729d476f9e'), 'status': 'PENDING'}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.37s ago] {'pk_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT requests.student_id, requests.group_id, requests.id, requests.status 
FROM requests 
WHERE requests.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 3.307s ago] {'pk_1': UUID('d2aa94c9-84d6-4701-b3ca-08729d476f9e')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.37s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.37s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.37s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.1s ago] {'id_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.68s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.38s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT requests.student_id AS requests_student_id, requests.group_id AS requests_group_id, requests.id AS requests_id, requests.status AS requests_status 
FROM requests 
WHERE %(param_1)s::UUID = requests.group_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 3.33s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.1s ago] {'id_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT requests.student_id, requests.group_id, requests.id, requests.status 
FROM requests 
WHERE requests.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 1.259s ago] {'id_1': UUID('d2aa94c9-84d6-4701-b3ca-08729d476f9e')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.69s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.39s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:1846 UPDATE requests SET status=%(status)s WHERE requests.id = %(requests_id)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 1.258s ago] {'status': 'APPROVED', 'requests_id': UUID('d2aa94c9-84d6-4701-b3ca-08729d476f9e')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.39s ago] {'param_1': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 13.41s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('68d99651-2eb2-4813-9ef9-16ce285a4ed7'), 'date': datetime.date(2024, 12, 18)}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
__________________________ test_unblock_user_success ___________________________

self = <sqlalchemy.engine.base.Connection object at 0x7f12aa980830>
dialect = <sqlalchemy.dialects.postgresql.psycopg.PGDialect_psycopg object at 0x7f12aeb0c560>
context = <sqlalchemy.dialects.postgresql.psycopg.PGExecutionContext_psycopg object at 0x7f12aa9d1820>
statement = <sqlalchemy.dialects.postgresql.psycopg.PGCompiler_psycopg object at 0x7f12aa9d1a00>
parameters = [{'group_id': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0'), 'student_id': UUID('d6dcf3b1-425a-4864-88d3-525decebef18')}]

    def _exec_single_context(
        self,
        dialect: Dialect,
        context: ExecutionContext,
        statement: Union[str, Compiled],
        parameters: Optional[_AnyMultiExecuteParams],
    ) -> CursorResult[Any]:
        """continue the _execute_context() method for a single DBAPI
        cursor.execute() or cursor.executemany() call.
    
        """
        if dialect.bind_typing is BindTyping.SETINPUTSIZES:
            generic_setinputsizes = context._prepare_set_input_sizes()
    
            if generic_setinputsizes:
                try:
                    dialect.do_set_input_sizes(
                        context.cursor, generic_setinputsizes, context
                    )
                except BaseException as e:
                    self._handle_dbapi_exception(
                        e, str(statement), parameters, None, context
                    )
    
        cursor, str_statement, parameters = (
            context.cursor,
            context.statement,
            context.parameters,
        )
    
        effective_parameters: Optional[_AnyExecuteParams]
    
        if not context.executemany:
            effective_parameters = parameters[0]
        else:
            effective_parameters = parameters
    
        if self._has_events or self.engine._has_events:
            for fn in self.dispatch.before_cursor_execute:
                str_statement, effective_parameters = fn(
                    self,
                    cursor,
                    str_statement,
                    effective_parameters,
                    context,
                    context.executemany,
                )
    
        if self._echo:
            self._log_info(str_statement)
    
            stats = context._get_cache_stats()
    
            if not self.engine.hide_parameters:
                self._log_info(
                    "[%s] %r",
                    stats,
                    sql_util._repr_params(
                        effective_parameters,
                        batches=10,
                        ismulti=context.executemany,
                    ),
                )
            else:
                self._log_info(
                    "[%s] [SQL parameters hidden due to hide_parameters=True]",
                    stats,
                )
    
        evt_handled: bool = False
        try:
            if context.execute_style is ExecuteStyle.EXECUTEMANY:
                effective_parameters = cast(
                    "_CoreMultiExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_executemany:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_executemany(
                        cursor,
                        str_statement,
                        effective_parameters,
                        context,
                    )
            elif not effective_parameters and context.no_parameters:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute_no_params:
                        if fn(cursor, str_statement, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_execute_no_params(
                        cursor, str_statement, context
                    )
            else:
                effective_parameters = cast(
                    "_CoreSingleExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
>                   self.dialect.do_execute(
                        cursor, str_statement, effective_parameters, context
                    )

.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.12/site-packages/sqlalchemy/engine/default.py:941: in do_execute
    cursor.execute(statement, parameters)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <psycopg.Cursor [closed] [IDLE] (host=localhost user=postgres database=unigate) at 0x7f12ac7e41d0>
query = 'INSERT INTO blocks (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)'
params = {'group_id': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0'), 'student_id': UUID('d6dcf3b1-425a-4864-88d3-525decebef18')}

    def execute(
        self,
        query: Query,
        params: Params | None = None,
        *,
        prepare: bool | None = None,
        binary: bool | None = None,
    ) -> Self:
        """
        Execute a query or command to the database.
        """
        try:
            with self._conn.lock:
                self._conn.wait(
                    self._execute_gen(query, params, prepare=prepare, binary=binary)
                )
        except e._NO_TRACEBACK as ex:
>           raise ex.with_traceback(None)
E           psycopg.errors.ForeignKeyViolation: insert or update on table "blocks" violates foreign key constraint "blocks_student_id_fkey"
E           DETAIL:  Key (student_id)=(d6dcf3b1-425a-4864-88d3-525decebef18) is not present in table "students".

.venv/lib/python3.12/site-packages/psycopg/cursor.py:97: ForeignKeyViolation

The above exception was the direct cause of the following exception:

    def test_unblock_user_success():
        group_response = create_group()
        created_group_id = group_response["id"]
    
>       create_blocked_student(test_student_id, created_group_id)

tests/routes/test_unblock_student.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/routes/test_unblock_student.py:59: in create_blocked_student
    connection.execute(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1418: in execute
    return meth(
.venv/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:515: in _execute_on_connection
    return connection._execute_clauseelement(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1640: in _execute_clauseelement
    ret = self._execute_context(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2355: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
.venv/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
.venv/lib/python3.12/site-packages/sqlalchemy/engine/default.py:941: in do_execute
    cursor.execute(statement, parameters)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <psycopg.Cursor [closed] [IDLE] (host=localhost user=postgres database=unigate) at 0x7f12ac7e41d0>
query = 'INSERT INTO blocks (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)'
params = {'group_id': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0'), 'student_id': UUID('d6dcf3b1-425a-4864-88d3-525decebef18')}

    def execute(
        self,
        query: Query,
        params: Params | None = None,
        *,
        prepare: bool | None = None,
        binary: bool | None = None,
    ) -> Self:
        """
        Execute a query or command to the database.
        """
        try:
            with self._conn.lock:
                self._conn.wait(
                    self._execute_gen(query, params, prepare=prepare, binary=binary)
                )
        except e._NO_TRACEBACK as ex:
>           raise ex.with_traceback(None)
E           sqlalchemy.exc.IntegrityError: (psycopg.errors.ForeignKeyViolation) insert or update on table "blocks" violates foreign key constraint "blocks_student_id_fkey"
E           DETAIL:  Key (student_id)=(d6dcf3b1-425a-4864-88d3-525decebef18) is not present in table "students".
E           [SQL: INSERT INTO blocks (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)]
E           [parameters: {'student_id': UUID('d6dcf3b1-425a-4864-88d3-525decebef18'), 'group_id': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}]
E           (Background on this error at: https://sqlalche.me/e/20/gkpj)

.venv/lib/python3.12/site-packages/psycopg/cursor.py:97: IntegrityError
----------------------------- Captured stdout call -----------------------------
2024-12-18 23:38:07,353 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:07,354 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:07,354 INFO sqlalchemy.engine.Engine [cached since 14.11s ago] {'number_1': 1234567}
2024-12-18 23:38:07,621 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:07,625 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:07,625 INFO sqlalchemy.engine.Engine SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
2024-12-18 23:38:07,625 INFO sqlalchemy.engine.Engine [cached since 14.39s ago] {'number_1': 1234567}
2024-12-18 23:38:07,627 INFO sqlalchemy.engine.Engine INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
2024-12-18 23:38:07,627 INFO sqlalchemy.engine.Engine [cached since 14.1s ago] {'name': 'TestGroup-f39d3e', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PUBLIC', 'id': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0'), 'creator_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
2024-12-18 23:38:07,627 INFO sqlalchemy.engine.Engine INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
2024-12-18 23:38:07,627 INFO sqlalchemy.engine.Engine [cached since 14.1s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0'), 'date': datetime.date(2024, 12, 18)}
2024-12-18 23:38:07,628 INFO sqlalchemy.engine.Engine INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:38:07,628 INFO sqlalchemy.engine.Engine [cached since 14.1s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}
2024-12-18 23:38:07,629 INFO sqlalchemy.engine.Engine COMMIT
2024-12-18 23:38:07,637 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:07,637 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
2024-12-18 23:38:07,637 INFO sqlalchemy.engine.Engine [cached since 14.1s ago] {'pk_1': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}
2024-12-18 23:38:07,638 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
2024-12-18 23:38:07,639 INFO sqlalchemy.engine.Engine [cached since 14.1s ago] {'param_1': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}
2024-12-18 23:38:07,640 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
2024-12-18 23:38:07,640 INFO sqlalchemy.engine.Engine [cached since 14.09s ago] {'param_1': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}
2024-12-18 23:38:07,641 INFO sqlalchemy.engine.Engine SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
2024-12-18 23:38:07,642 INFO sqlalchemy.engine.Engine [cached since 14.09s ago] {'param_1': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}
2024-12-18 23:38:07,643 INFO sqlalchemy.engine.Engine ROLLBACK
2024-12-18 23:38:07,644 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-12-18 23:38:07,645 INFO sqlalchemy.engine.Engine SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
2024-12-18 23:38:07,645 INFO sqlalchemy.engine.Engine [generated in 0.00011s] {'id_1': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}
2024-12-18 23:38:07,646 INFO sqlalchemy.engine.Engine INSERT INTO blocks (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
2024-12-18 23:38:07,646 INFO sqlalchemy.engine.Engine [generated in 0.00010s] {'student_id': UUID('d6dcf3b1-425a-4864-88d3-525decebef18'), 'group_id': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}
2024-12-18 23:38:07,646 INFO sqlalchemy.engine.Engine ROLLBACK
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 14.11s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number, students.email, students.name, students.surname, students.id 
FROM students 
WHERE students.number = %(number_1)s::INTEGER
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 14.39s ago] {'number_1': 1234567}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO groups (name, description, category, type, id, creator_id) VALUES (%(name)s::VARCHAR, %(description)s::VARCHAR, %(category)s::VARCHAR, %(type)s, %(id)s::UUID, %(creator_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 14.1s ago] {'name': 'TestGroup-f39d3e', 'description': 'A test group description', 'category': 'Test Category', 'type': 'PUBLIC', 'id': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0'), 'creator_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO joins (student_id, group_id, date) VALUES (%(student_id)s::UUID, %(group_id)s::UUID, %(date)s::DATE)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 14.1s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0'), 'date': datetime.date(2024, 12, 18)}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO super_students (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 14.1s ago] {'student_id': UUID('ff405335-0cf3-4339-a01c-706a44ddc583'), 'group_id': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}
INFO     sqlalchemy.engine.Engine:base.py:2707 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(pk_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 14.1s ago] {'pk_1': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, joins 
WHERE %(param_1)s::UUID = joins.group_id AND students.id = joins.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 14.1s ago] {'param_1': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, super_students 
WHERE %(param_1)s::UUID = super_students.group_id AND students.id = super_students.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 14.09s ago] {'param_1': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT students.number AS students_number, students.email AS students_email, students.name AS students_name, students.surname AS students_surname, students.id AS students_id 
FROM students, blocks 
WHERE %(param_1)s::UUID = blocks.group_id AND students.id = blocks.student_id
INFO     sqlalchemy.engine.Engine:base.py:1846 [cached since 14.09s ago] {'param_1': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2701 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1846 SELECT groups.name, groups.description, groups.category, groups.type, groups.id, groups.creator_id 
FROM groups 
WHERE groups.id = %(id_1)s::UUID
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00011s] {'id_1': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}
INFO     sqlalchemy.engine.Engine:base.py:1846 INSERT INTO blocks (student_id, group_id) VALUES (%(student_id)s::UUID, %(group_id)s::UUID)
INFO     sqlalchemy.engine.Engine:base.py:1846 [generated in 0.00010s] {'student_id': UUID('d6dcf3b1-425a-4864-88d3-525decebef18'), 'group_id': UUID('bdadac3f-e529-4583-b901-3cbf328eb2f0')}
INFO     sqlalchemy.engine.Engine:base.py:2704 ROLLBACK
=============================== warnings summary ===============================
tests/routes/test_block_user.py::test_get_group_info
  /home/lorenzo/Scrivania/CAPSTONE/unigate/backend/.venv/lib/python3.12/site-packages/_pytest/python.py:163: PytestReturnNotNoneWarning: Expected None, but tests/routes/test_block_user.py::test_get_group_info returned 'c35fce01-2c8e-4179-abaf-643efeb79a57', which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?
    warnings.warn(

tests/routes/test_block_user.py::test_student_request_join_group
  /home/lorenzo/Scrivania/CAPSTONE/unigate/backend/.venv/lib/python3.12/site-packages/_pytest/python.py:163: PytestReturnNotNoneWarning: Expected None, but tests/routes/test_block_user.py::test_student_request_join_group returned '36860053-a181-4b65-9eb4-b4f23571e6bc', which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?
    warnings.warn(

tests/routes/test_private_group_join_request_response.py::test_create_request_success
tests/routes/test_private_group_join_request_response.py::test_create_request_already_exists
tests/routes/test_private_group_join_request_response.py::test_get_all_requests_for_group
tests/routes/test_private_group_join_request_response.py::test_reject_request_success
tests/routes/test_private_group_join_request_response.py::test_reject_request_already_rejected
tests/routes/test_private_group_join_request_response.py::test_approve_request_success
  /home/lorenzo/Scrivania/CAPSTONE/unigate/backend/.venv/lib/python3.12/site-packages/sqlmodel/orm/session.py:127: SAWarning: Object of type <Request> not in session, add operation along 'Group.requests' will not proceed (This warning originated from the Session 'autoflush' process, which was invoked automatically in response to a user-initiated operation.)
    return super().execute(

tests/routes/test_private_group_join_request_response.py::test_create_request_success
tests/routes/test_private_group_join_request_response.py::test_create_request_already_exists
tests/routes/test_private_group_join_request_response.py::test_get_all_requests_for_group
tests/routes/test_private_group_join_request_response.py::test_reject_request_success
tests/routes/test_private_group_join_request_response.py::test_reject_request_already_rejected
tests/routes/test_private_group_join_request_response.py::test_approve_request_success
  /home/lorenzo/Scrivania/CAPSTONE/unigate/backend/.venv/lib/python3.12/site-packages/sqlmodel/orm/session.py:127: SAWarning: Object of type <Request> not in session, add operation along 'Student.requests' will not proceed (This warning originated from the Session 'autoflush' process, which was invoked automatically in response to a user-initiated operation.)
    return super().execute(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/routes/test_block_student.py::test_block_user_success - Assertio...
FAILED tests/routes/test_join_private_groups.py::test_join_private_group_success
FAILED tests/routes/test_join_public_group.py::test_student_non_existent - sq...
FAILED tests/routes/test_join_public_group.py::test_group_non_existant - sqla...
FAILED tests/routes/test_join_public_group.py::test_valid_join - assert 405 =...
FAILED tests/routes/test_join_public_group.py::test_double_enrollment - asser...
FAILED tests/routes/test_leave_group.py::test_student_non_existent - Assertio...
FAILED tests/routes/test_leave_group.py::test_valid_leave - assert 404 == 200
FAILED tests/routes/test_leave_group.py::test_valid_leave_no_members - assert...
FAILED tests/routes/test_login.py::test_login_invalid_username - ValueError: ...
FAILED tests/routes/test_my_groups.py::test_my_groups_empty - AssertionError:...
FAILED tests/routes/test_my_groups.py::test_my_groups - KeyError: 'id'
FAILED tests/routes/test_private_group_join_request_response.py::test_reject_request_already_rejected
FAILED tests/routes/test_private_group_join_request_response.py::test_approve_request_success
FAILED tests/routes/test_unblock_student.py::test_unblock_user_success - sqla...
================= 15 failed, 27 passed, 14 warnings in 15.45s ==================
