services:
  postgres-unigate:
    container_name: postgres-unigate
    image: postgres:17-bookworm
    ports:
      - "${POSTGRES_PORT}:5432"
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_PORT=${POSTGRES_PORT?Variable not set}
    volumes:
      - ./postgres/create-databases.sh:/docker-entrypoint-initdb.d/create-databases.sh
      - pgdata:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: always

  pgadmin-unigate:
    container_name: pgadmin-unigate
    image: dpage/pgadmin4:8.13
    entrypoint:
      - /custom-entrypoint.sh
    ports:
      - "${PGADMIN_PORT}:80"
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL?Variable not set}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD?Variable not set}
      - PGADMIN_PORT=${PGADMIN_PORT?Variable not set}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
      - PGADMIN_SERVER_JSON_FILE=/tmp/servers.json
    volumes:
      - ./pgadmin/entrypoint.sh:/custom-entrypoint.sh
      - pgadmin_data:/var/lib/pgadmin:rw
    depends_on:
      - postgres-unigate
    restart: always

  backend-unigate:
    container_name: backend-unigate
    command: fastapi run --reload unigate/main.py
    build:
      context: ./backend
      dockerfile: Dockerfile
    develop:
      watch:
        - path: ./backend/unigate
          action: sync
          target: /app
          ignore:
            - ./backend/.venv
            - .venv
            - ./backend/alembic_auth
            - ./backend/alembic_unigate
        - path: ./backend/pyproject.toml
          action: rebuild
    ports:
      - "${BACKEND_PORT}:8000"
    env_file:
      - .env
    environment:
      - BACKEND_PORT=${BACKEND_PORT?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_HOST=postgres-unigate
      - POSTGRES_PORT=5432
      - UNIGATE_DB=${UNIGATE_DB?Variable not set}
      - AUTH_DB=${AUTH_DB?Variable not set}
      - MODE=test
      - JWT_SECRET=${JWT_SECRET?Variable not set}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY?Variable not set}
    depends_on:
      postgres-unigate:
        condition: service_healthy
        restart: true
    restart: always

  frontend-unigate:
    container_name: frontend-unigate
    build:
      context: ./frontend
      dockerfile: Dockerfile
    develop:
      watch:
        - path: ./frontend
          action: sync
          target: /app
        - path: ./frontend/package.json
          action: rebuild
    ports:
      - "${FRONTEND_PORT}:3000"
    env_file:
      - .env
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT?Variable not set}
    restart: always

volumes:
  pgdata:
  pgadmin_data:
